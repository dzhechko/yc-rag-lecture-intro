{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/utils/compress.js", "../../../node_modules/hono/dist/utils/mime.js", "../../../node_modules/hono/dist/middleware/serve-static/path.js", "../../../node_modules/hono/dist/middleware/serve-static/index.js", "../../../node_modules/hono/dist/adapter/cloudflare-workers/utils.js", "../../../node_modules/hono/dist/adapter/cloudflare-workers/serve-static.js", "../../../node_modules/hono/dist/adapter/cloudflare-workers/serve-static-module.js", "../../../src/index.tsx", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-n4Pb3G/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-n4Pb3G/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/pages-dev-util.ts", "<define:__ROUTES__>", "../../../node_modules/wrangler/templates/pages-dev-pipeline.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-nGRZZx/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-nGRZZx/middleware-loader.entry.ts"],
  "sourceRoot": "/home/user/webapp/.wrangler/tmp/dev-DChJz1",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/utils/compress.ts\nvar COMPRESSIBLE_CONTENT_TYPE_REGEX = /^\\s*(?:text\\/(?!event-stream(?:[;\\s]|$))[^;\\s]+|application\\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\\.dart|vnd\\.ms-fontobject|vnd\\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\\/(?:otf|ttf)|image\\/(?:bmp|vnd\\.adobe\\.photoshop|vnd\\.microsoft\\.icon|vnd\\.ms-dds|x-icon|x-ms-bmp)|message\\/rfc822|model\\/gltf-binary|x-shader\\/x-fragment|x-shader\\/x-vertex|[^;\\s]+?\\+(?:json|text|xml|yaml))(?:[;\\s]|$)/i;\nexport {\n  COMPRESSIBLE_CONTENT_TYPE_REGEX\n};\n", "// src/utils/mime.ts\nvar getMimeType = (filename, mimes = baseMimes) => {\n  const regexp = /\\.([a-zA-Z0-9]+?)$/;\n  const match = filename.match(regexp);\n  if (!match) {\n    return;\n  }\n  let mimeType = mimes[match[1]];\n  if (mimeType && mimeType.startsWith(\"text\")) {\n    mimeType += \"; charset=utf-8\";\n  }\n  return mimeType;\n};\nvar getExtension = (mimeType) => {\n  for (const ext in baseMimes) {\n    if (baseMimes[ext] === mimeType) {\n      return ext;\n    }\n  }\n};\nvar _baseMimes = {\n  aac: \"audio/aac\",\n  avi: \"video/x-msvideo\",\n  avif: \"image/avif\",\n  av1: \"video/av1\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  eot: \"application/vnd.ms-fontobject\",\n  epub: \"application/epub+zip\",\n  gif: \"image/gif\",\n  gz: \"application/gzip\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/x-icon\",\n  ics: \"text/calendar\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"text/javascript\",\n  json: \"application/json\",\n  jsonld: \"application/ld+json\",\n  map: \"application/json\",\n  mid: \"audio/x-midi\",\n  midi: \"audio/x-midi\",\n  mjs: \"text/javascript\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  oga: \"audio/ogg\",\n  ogv: \"video/ogg\",\n  ogx: \"application/ogg\",\n  opus: \"audio/opus\",\n  otf: \"font/otf\",\n  pdf: \"application/pdf\",\n  png: \"image/png\",\n  rtf: \"application/rtf\",\n  svg: \"image/svg+xml\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  ts: \"video/mp2t\",\n  ttf: \"font/ttf\",\n  txt: \"text/plain\",\n  wasm: \"application/wasm\",\n  webm: \"video/webm\",\n  weba: \"audio/webm\",\n  webmanifest: \"application/manifest+json\",\n  webp: \"image/webp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  xhtml: \"application/xhtml+xml\",\n  xml: \"application/xml\",\n  zip: \"application/zip\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  gltf: \"model/gltf+json\",\n  glb: \"model/gltf-binary\"\n};\nvar baseMimes = _baseMimes;\nexport {\n  getExtension,\n  getMimeType,\n  baseMimes as mimes\n};\n", "// src/middleware/serve-static/path.ts\nvar defaultJoin = (...paths) => {\n  let result = paths.filter((p) => p !== \"\").join(\"/\");\n  result = result.replace(/(?<=\\/)\\/+/g, \"\");\n  const segments = result.split(\"/\");\n  const resolved = [];\n  for (const segment of segments) {\n    if (segment === \"..\" && resolved.length > 0 && resolved.at(-1) !== \"..\") {\n      resolved.pop();\n    } else if (segment !== \".\") {\n      resolved.push(segment);\n    }\n  }\n  return resolved.join(\"/\") || \".\";\n};\nexport {\n  defaultJoin\n};\n", "// src/middleware/serve-static/index.ts\nimport { COMPRESSIBLE_CONTENT_TYPE_REGEX } from \"../../utils/compress.js\";\nimport { getMimeType } from \"../../utils/mime.js\";\nimport { defaultJoin } from \"./path.js\";\nvar ENCODINGS = {\n  br: \".br\",\n  zstd: \".zst\",\n  gzip: \".gz\"\n};\nvar ENCODINGS_ORDERED_KEYS = Object.keys(ENCODINGS);\nvar DEFAULT_DOCUMENT = \"index.html\";\nvar serveStatic = (options) => {\n  const root = options.root ?? \"./\";\n  const optionPath = options.path;\n  const join = options.join ?? defaultJoin;\n  return async (c, next) => {\n    if (c.finalized) {\n      return next();\n    }\n    let filename;\n    if (options.path) {\n      filename = options.path;\n    } else {\n      try {\n        filename = decodeURIComponent(c.req.path);\n        if (/(?:^|[\\/\\\\])\\.\\.(?:$|[\\/\\\\])/.test(filename)) {\n          throw new Error();\n        }\n      } catch {\n        await options.onNotFound?.(c.req.path, c);\n        return next();\n      }\n    }\n    let path = join(\n      root,\n      !optionPath && options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename\n    );\n    if (options.isDir && await options.isDir(path)) {\n      path = join(path, DEFAULT_DOCUMENT);\n    }\n    const getContent = options.getContent;\n    let content = await getContent(path, c);\n    if (content instanceof Response) {\n      return c.newResponse(content.body, content);\n    }\n    if (content) {\n      const mimeType = options.mimes && getMimeType(path, options.mimes) || getMimeType(path);\n      c.header(\"Content-Type\", mimeType || \"application/octet-stream\");\n      if (options.precompressed && (!mimeType || COMPRESSIBLE_CONTENT_TYPE_REGEX.test(mimeType))) {\n        const acceptEncodingSet = new Set(\n          c.req.header(\"Accept-Encoding\")?.split(\",\").map((encoding) => encoding.trim())\n        );\n        for (const encoding of ENCODINGS_ORDERED_KEYS) {\n          if (!acceptEncodingSet.has(encoding)) {\n            continue;\n          }\n          const compressedContent = await getContent(path + ENCODINGS[encoding], c);\n          if (compressedContent) {\n            content = compressedContent;\n            c.header(\"Content-Encoding\", encoding);\n            c.header(\"Vary\", \"Accept-Encoding\", { append: true });\n            break;\n          }\n        }\n      }\n      await options.onFound?.(path, c);\n      return c.body(content);\n    }\n    await options.onNotFound?.(path, c);\n    await next();\n    return;\n  };\n};\nexport {\n  serveStatic\n};\n", "// src/adapter/cloudflare-workers/utils.ts\nvar getContentFromKVAsset = async (path, options) => {\n  let ASSET_MANIFEST;\n  if (options && options.manifest) {\n    if (typeof options.manifest === \"string\") {\n      ASSET_MANIFEST = JSON.parse(options.manifest);\n    } else {\n      ASSET_MANIFEST = options.manifest;\n    }\n  } else {\n    if (typeof __STATIC_CONTENT_MANIFEST === \"string\") {\n      ASSET_MANIFEST = JSON.parse(__STATIC_CONTENT_MANIFEST);\n    } else {\n      ASSET_MANIFEST = __STATIC_CONTENT_MANIFEST;\n    }\n  }\n  let ASSET_NAMESPACE;\n  if (options && options.namespace) {\n    ASSET_NAMESPACE = options.namespace;\n  } else {\n    ASSET_NAMESPACE = __STATIC_CONTENT;\n  }\n  const key = ASSET_MANIFEST[path] || path;\n  if (!key) {\n    return null;\n  }\n  const content = await ASSET_NAMESPACE.get(key, { type: \"stream\" });\n  if (!content) {\n    return null;\n  }\n  return content;\n};\nexport {\n  getContentFromKVAsset\n};\n", "// src/adapter/cloudflare-workers/serve-static.ts\nimport { serveStatic as baseServeStatic } from \"../../middleware/serve-static/index.js\";\nimport { getContentFromKVAsset } from \"./utils.js\";\nvar serveStatic = (options) => {\n  return async function serveStatic2(c, next) {\n    const getContent = async (path) => {\n      return getContentFromKVAsset(path, {\n        manifest: options.manifest,\n        namespace: options.namespace ? options.namespace : c.env ? c.env.__STATIC_CONTENT : void 0\n      });\n    };\n    return baseServeStatic({\n      ...options,\n      getContent\n    })(c, next);\n  };\n};\nexport {\n  serveStatic\n};\n", "// src/adapter/cloudflare-workers/serve-static-module.ts\nimport { serveStatic } from \"./serve-static.js\";\nvar module = (options) => {\n  return serveStatic(options);\n};\nexport {\n  module as serveStatic\n};\n", "import { Hono } from 'hono'\nimport { cors } from 'hono/cors'\nimport { serveStatic } from 'hono/cloudflare-workers'\n\nconst app = new Hono()\n\n// Enable CORS for frontend-backend communication\napp.use('/api/*', cors())\n\n// Serve static files from public directory (builds to dist/static)\napp.use('/static/*', serveStatic({ root: './' }))\n\n// Serve HTML files from root (builds to dist/)\napp.use('*.html', serveStatic({ root: './' }))\n\n// Main page route\napp.get('/', (c) => {\n  return c.html(`\n    <!DOCTYPE html>\n    <html lang=\"ru\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        \n        <!-- SEO Meta Tags -->\n        <title>RAG (Retrieval Augmented Generation) - Онлайн семинар | Практический курс с Yandex Foundation Models</title>\n        <meta name=\"description\" content=\"Изучите RAG: архитектуру, векторные базы данных, семантический поиск. Практические примеры с Python, FAISS, HNSW, Yandex Foundation Models. Интерактивные упражнения и код.\">\n        <meta name=\"keywords\" content=\"RAG, Retrieval Augmented Generation, векторный поиск, эмбеддинги, FAISS, HNSW, семантический поиск, машинное обучение, Python, Yandex Foundation Models\">\n        \n        <!-- Open Graph / Facebook -->\n        <meta property=\"og:type\" content=\"website\">\n        <meta property=\"og:title\" content=\"RAG - Retrieval Augmented Generation | Интерактивный семинар\">\n        <meta property=\"og:description\" content=\"Полный курс по RAG: от теории до практики. Изучите архитектуру, векторные БД, метрики оценки. Онлайн песочница Python с Yandex Models.\">\n        \n        <!-- Twitter -->\n        <meta property=\"twitter:card\" content=\"summary_large_image\">\n        <meta property=\"twitter:title\" content=\"RAG Семинар - Retrieval Augmented Generation\">\n        <meta property=\"twitter:description\" content=\"Изучите RAG с нуля: архитектура, векторный поиск, практические примеры с Yandex Foundation Models\">\n        \n        <!-- Structured Data -->\n        <script type=\"application/ld+json\">\n        {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Course\",\n            \"name\": \"RAG (Retrieval Augmented Generation) - Практический семинар\",\n            \"description\": \"Комплексное изучение технологии RAG: архитектура, векторные базы данных, семантический поиск, практическая реализация с Yandex Foundation Models\",\n            \"provider\": {\n                \"@type\": \"Organization\",\n                \"name\": \"AI Education Hub\"\n            },\n            \"courseMode\": \"online\",\n            \"duration\": \"PT1H\",\n            \"educationalLevel\": \"Intermediate\",\n            \"teaches\": [\"RAG Architecture\", \"Vector Databases\", \"Semantic Search\", \"FAISS\", \"HNSW\", \"Recall@k\", \"Yandex Foundation Models\"]\n        }\n        </script>\n        \n        <!-- External Libraries -->\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n        <link href=\"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <script src=\"https://d3js.org/d3.v7.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/pyodide/v0.28.2/full/pyodide.js\"></script>\n        \n        <!-- Custom Styles -->\n        <link href=\"/static/styles.css\" rel=\"stylesheet\">\n        \n        <style>\n            .gradient-bg {\n                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            }\n            .section-padding {\n                padding: 4rem 1rem;\n            }\n            .card-shadow {\n                box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n            }\n            .code-editor {\n                font-family: 'Courier New', monospace;\n                font-size: 14px;\n                line-height: 1.5;\n                border: 1px solid #e2e8f0;\n                border-radius: 8px;\n                padding: 16px;\n                background: #f8fafc;\n            }\n            .output-section {\n                background: #1a202c;\n                color: #e2e8f0;\n                border-radius: 8px;\n                padding: 16px;\n                margin-top: 12px;\n                font-family: 'Courier New', monospace;\n                font-size: 14px;\n                line-height: 1.4;\n                white-space: pre-wrap;\n                overflow-x: auto;\n            }\n            .tab {\n                transition: all 0.2s ease;\n                cursor: pointer;\n                border-bottom: 3px solid transparent;\n            }\n            .tab.active {\n                border-bottom-color: #667eea;\n                background-color: #f7fafc;\n            }\n            .tab-content {\n                display: none;\n            }\n            .tab-content.active {\n                display: block;\n            }\n            .quiz-option {\n                transition: all 0.2s ease;\n                cursor: pointer;\n                border: 2px solid #e2e8f0;\n            }\n            .quiz-option:hover {\n                border-color: #667eea;\n                background-color: #f7fafc;\n            }\n            .quiz-option.selected {\n                border-color: #667eea;\n                background-color: #edf2f7;\n            }\n            .quiz-option.correct {\n                border-color: #48bb78;\n                background-color: #f0fff4;\n            }\n            .quiz-option.incorrect {\n                border-color: #f56565;\n                background-color: #fed7d7;\n            }\n            .visualization-container {\n                border: 2px solid #e2e8f0;\n                border-radius: 12px;\n                padding: 20px;\n                background: white;\n            }\n            \n            /* Mobile Responsiveness */\n            @media (max-width: 768px) {\n                .section-padding {\n                    padding: 2rem 1rem;\n                }\n                .code-editor {\n                    font-size: 12px;\n                    height: 250px !important;\n                }\n                .grid {\n                    grid-template-columns: 1fr !important;\n                }\n            }\n            \n            /* Progress Bar */\n            .progress-bar {\n                width: 100%;\n                height: 8px;\n                background: #e2e8f0;\n                border-radius: 4px;\n                overflow: hidden;\n            }\n            .progress-fill {\n                height: 100%;\n                background: linear-gradient(90deg, #667eea, #764ba2);\n                transition: width 0.3s ease;\n            }\n        </style>\n    </head>\n    <body class=\"bg-gray-50\">\n        <!-- Navigation -->\n        <nav class=\"bg-white shadow-lg sticky top-0 z-50\">\n            <div class=\"max-w-7xl mx-auto px-4\">\n                <div class=\"flex justify-between items-center h-16\">\n                    <div class=\"flex items-center\">\n                        <i class=\"fas fa-brain text-purple-600 text-2xl mr-3\"></i>\n                        <span class=\"text-xl font-bold text-gray-800\">RAG Семинар</span>\n                    </div>\n                    <div class=\"hidden md:flex space-x-8\">\n                        <a href=\"#overview\" class=\"text-gray-700 hover:text-purple-600 transition-colors\">Обзор</a>\n                        <a href=\"#theory\" class=\"text-gray-700 hover:text-purple-600 transition-colors\">Теория</a>\n                        <a href=\"#practice\" class=\"text-gray-700 hover:text-purple-600 transition-colors\">Практика</a>\n                        <a href=\"#quiz\" class=\"text-gray-700 hover:text-purple-600 transition-colors\">Квиз</a>\n                        <a href=\"#yandex\" class=\"text-gray-700 hover:text-purple-600 transition-colors\">Yandex Models</a>\n                    </div>\n                    <button class=\"md:hidden\">\n                        <i class=\"fas fa-bars text-gray-700\"></i>\n                    </button>\n                </div>\n            </div>\n        </nav>\n\n        <!-- Hero Section -->\n        <section class=\"gradient-bg text-white section-padding\">\n            <div class=\"max-w-6xl mx-auto text-center\">\n                <div class=\"mb-8\">\n                    <i class=\"fas fa-rocket text-6xl mb-6 opacity-90\"></i>\n                </div>\n                <h1 class=\"text-5xl md:text-6xl font-bold mb-6\">\n                    RAG: Retrieval Augmented Generation\n                </h1>\n                <p class=\"text-xl md:text-2xl mb-8 opacity-90\">\n                    Интерактивный онлайн-семинар по архитектуре RAG\n                </p>\n                <div class=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 mb-8 max-w-4xl mx-auto\">\n                    <div class=\"grid md:grid-cols-3 gap-6 text-center\">\n                        <div>\n                            <i class=\"fas fa-clock text-3xl mb-2\"></i>\n                            <div class=\"text-lg font-semibold\">60 минут</div>\n                            <div class=\"opacity-80\">Продолжительность</div>\n                        </div>\n                        <div>\n                            <i class=\"fas fa-code text-3xl mb-2\"></i>\n                            <div class=\"text-lg font-semibold\">Практические примеры</div>\n                            <div class=\"opacity-80\">Python + Yandex Models</div>\n                        </div>\n                        <div>\n                            <i class=\"fas fa-play-circle text-3xl mb-2\"></i>\n                            <div class=\"text-lg font-semibold\">Интерактивность</div>\n                            <div class=\"opacity-80\">Песочница + Визуализации</div>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"#overview\" class=\"inline-block bg-white text-purple-600 px-8 py-4 rounded-full text-lg font-semibold hover:bg-gray-100 transition-colors\">\n                    Начать изучение <i class=\"fas fa-arrow-down ml-2\"></i>\n                </a>\n            </div>\n        </section>\n\n        <!-- Progress Indicator -->\n        <div class=\"bg-white py-4 shadow-sm\">\n            <div class=\"max-w-6xl mx-auto px-4\">\n                <div class=\"flex items-center justify-between text-sm text-gray-600 mb-2\">\n                    <span>Прогресс семинара</span>\n                    <span id=\"progress-text\">0%</span>\n                </div>\n                <div class=\"progress-bar\">\n                    <div class=\"progress-fill\" id=\"progress-fill\" style=\"width: 0%\"></div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Overview Section -->\n        <section id=\"overview\" class=\"section-padding\">\n            <div class=\"max-w-6xl mx-auto\">\n                <h2 class=\"text-4xl font-bold text-center mb-12 text-gray-800\">\n                    <i class=\"fas fa-map mr-3 text-purple-600\"></i>\n                    Структура семинара\n                </h2>\n                \n                <div class=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    <a href=\"#theory\" onclick=\"scrollToSection('theory')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-purple-50\">\n                        <div class=\"text-purple-600 text-4xl mb-4\">\n                            <i class=\"fas fa-sitemap\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">1. Введение в RAG</h3>\n                        <p class=\"text-gray-600 mb-4\">Основная концепция, архитектура, компоненты RAG системы</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 10 минут</div>\n                        <div class=\"mt-3 text-purple-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n\n                    <a href=\"#theory\" onclick=\"scrollToSection('theory')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-blue-50\">\n                        <div class=\"text-blue-600 text-4xl mb-4\">\n                            <i class=\"fas fa-vector-square\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">2. Векторизация</h3>\n                        <p class=\"text-gray-600 mb-4\">Методы эмбеддингов, Sentence Transformers, модели</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 10 минут</div>\n                        <div class=\"mt-3 text-blue-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n\n                    <a href=\"#theory\" onclick=\"scrollToSection('theory')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-green-50\">\n                        <div class=\"text-green-600 text-4xl mb-4\">\n                            <i class=\"fas fa-search\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">3. Семантический поиск</h3>\n                        <p class=\"text-gray-600 mb-4\">FAISS, HNSW, Annoy - сравнение алгоритмов</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 15 минут</div>\n                        <div class=\"mt-3 text-green-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n\n                    <a href=\"#theory\" onclick=\"scrollToSection('theory')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-orange-50\">\n                        <div class=\"text-orange-600 text-4xl mb-4\">\n                            <i class=\"fas fa-chart-line\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">4. Метрики качества</h3>\n                        <p class=\"text-gray-600 mb-4\">Recall@k, Precision@k, оценка RAG систем</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 5 минут</div>\n                        <div class=\"mt-3 text-orange-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n\n                    <a href=\"#practice\" onclick=\"scrollToSection('practice')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-red-50\">\n                        <div class=\"text-red-600 text-4xl mb-4\">\n                            <i class=\"fas fa-code\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">5. Практика</h3>\n                        <p class=\"text-gray-600 mb-4\">Базовый RAG-конвейер, примеры кода</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 15 минут</div>\n                        <div class=\"mt-3 text-red-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n\n                    <a href=\"#yandex\" onclick=\"scrollToSection('yandex')\" class=\"block bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300 cursor-pointer transform hover:scale-105 hover:bg-indigo-50\">\n                        <div class=\"text-indigo-600 text-4xl mb-4\">\n                            <i class=\"fas fa-brain\"></i>\n                        </div>\n                        <h3 class=\"text-xl font-bold mb-3\">6. Yandex Foundation Models</h3>\n                        <p class=\"text-gray-600 mb-4\">Интеграция с YandexGPT, эмбеддинги, API</p>\n                        <div class=\"text-sm text-gray-500\">⏱️ 5 минут</div>\n                        <div class=\"mt-3 text-indigo-600 text-sm font-semibold\">\n                            <i class=\"fas fa-arrow-right mr-2\"></i>Перейти к разделу\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </section>\n\n        <!-- Theory Section -->\n        <section id=\"theory\" class=\"bg-white section-padding\">\n            <div class=\"max-w-6xl mx-auto\">\n                <h2 class=\"text-4xl font-bold text-center mb-12 text-gray-800\">\n                    <i class=\"fas fa-book mr-3 text-purple-600\"></i>\n                    Теоретические основы\n                </h2>\n\n                <!-- Tabs Navigation -->\n                <div class=\"flex flex-wrap border-b border-gray-200 mb-8\" id=\"theory-tabs\">\n                    <button class=\"tab px-6 py-3 text-lg font-medium active\" data-tab=\"rag-intro\">\n                        RAG Архитектура\n                    </button>\n                    <button class=\"tab px-6 py-3 text-lg font-medium\" data-tab=\"embeddings\">\n                        Эмбеддинги\n                    </button>\n                    <button class=\"tab px-6 py-3 text-lg font-medium\" data-tab=\"vector-search\">\n                        Векторный поиск\n                    </button>\n                    <button class=\"tab px-6 py-3 text-lg font-medium\" data-tab=\"metrics\">\n                        Метрики\n                    </button>\n                </div>\n\n                <!-- Tab Contents -->\n                <div class=\"tab-content active\" id=\"rag-intro\">\n                    <div class=\"grid md:grid-cols-2 gap-8\">\n                        <div>\n                            <h3 class=\"text-2xl font-bold mb-4\">Что такое RAG?</h3>\n                            <div class=\"space-y-4 text-gray-700\">\n                                <p><strong>RAG (Retrieval-Augmented Generation)</strong> — гибридная архитектура, объединяющая механизмы поиска с генеративными языковыми моделями.</p>\n                                \n                                <div class=\"bg-yellow-50 border-l-4 border-yellow-400 p-4\">\n                                    <p class=\"font-semibold\">Проблема:</p>\n                                    <p>LLM склонны к галлюцинациям и не имеют доступа к актуальной информации</p>\n                                </div>\n                                \n                                <div class=\"bg-green-50 border-l-4 border-green-400 p-4\">\n                                    <p class=\"font-semibold\">Решение:</p>\n                                    <p>Внешние источники знаний + генеративная модель = точные и обоснованные ответы</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h4 class=\"text-lg font-semibold mb-4\">Архитектура RAG</h4>\n                            <div class=\"bg-gray-100 rounded-lg p-6 font-mono text-sm\">\n                                <div class=\"text-center\">\n                                    <div class=\"mb-4\">┌─────────────────┐</div>\n                                    <div class=\"mb-2\">│   Retriever     │</div>\n                                    <div class=\"mb-4\">│ (поиск данных)  │</div>\n                                    <div class=\"mb-4\">└─────────────────┘</div>\n                                    <div class=\"mb-4\">         ↓</div>\n                                    <div class=\"mb-4\">┌─────────────────┐</div>\n                                    <div class=\"mb-2\">│  Vector Store   │</div>\n                                    <div class=\"mb-4\">│ (база знаний)   │</div>\n                                    <div class=\"mb-4\">└─────────────────┘</div>\n                                    <div class=\"mb-4\">         ↓</div>\n                                    <div class=\"mb-4\">┌─────────────────┐</div>\n                                    <div class=\"mb-2\">│   Generator     │</div>\n                                    <div class=\"mb-4\">│ (генерация LLM) │</div>\n                                    <div class=\"mb-4\">└─────────────────┘</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mt-8 bg-blue-50 rounded-lg p-6\">\n                        <h4 class=\"text-lg font-semibold mb-4\">Фазы работы RAG:</h4>\n                        <div class=\"grid md:grid-cols-2 gap-6\">\n                            <div>\n                                <h5 class=\"font-semibold text-blue-800 mb-2\">1. Индексация (Offline)</h5>\n                                <p class=\"text-sm text-gray-700\">документы → чанки → эмбеддинги → векторная БД</p>\n                            </div>\n                            <div>\n                                <h5 class=\"font-semibold text-blue-800 mb-2\">2. Поиск и генерация (Online)</h5>\n                                <p class=\"text-sm text-gray-700\">запрос → поиск → контекст → LLM → ответ</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"tab-content\" id=\"embeddings\">\n                    <h3 class=\"text-2xl font-bold mb-6\">Методы векторизации и эмбеддинги</h3>\n                    \n                    <div class=\"grid md:grid-cols-3 gap-6 mb-8\">\n                        <div class=\"bg-gray-50 rounded-lg p-6\">\n                            <h4 class=\"font-semibold mb-3 text-gray-800\">Классические</h4>\n                            <ul class=\"space-y-2 text-sm text-gray-600\">\n                                <li>• One-hot encoding</li>\n                                <li>• Bag of words</li>\n                                <li>• TF-IDF</li>\n                            </ul>\n                        </div>\n                        <div class=\"bg-blue-50 rounded-lg p-6\">\n                            <h4 class=\"font-semibold mb-3 text-blue-800\">Современные</h4>\n                            <ul class=\"space-y-2 text-sm text-blue-700\">\n                                <li>• Word2Vec</li>\n                                <li>• BERT</li>\n                                <li>• Sentence Transformers</li>\n                            </ul>\n                        </div>\n                        <div class=\"bg-green-50 rounded-lg p-6\">\n                            <h4 class=\"font-semibold mb-3 text-green-800\">SOTA модели</h4>\n                            <ul class=\"space-y-2 text-sm text-green-700\">\n                                <li>• all-MiniLM-L6-v2</li>\n                                <li>• bge-base-en-v1.5</li>\n                                <li>• YandexGPT Embeddings</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"bg-white border rounded-lg p-6\">\n                        <h4 class=\"font-semibold mb-4\">Sentence Transformers</h4>\n                        <div class=\"grid md:grid-cols-2 gap-6\">\n                            <div>\n                                <ul class=\"space-y-2 text-sm\">\n                                    <li>✅ <strong>10,000+</strong> предобученных моделей на Hugging Face</li>\n                                    <li>✅ Поддержка embedding, reranker, sparse encoder моделей</li>\n                                    <li>✅ Простой API для семантического поиска</li>\n                                    <li>✅ Оптимизация для различных задач</li>\n                                </ul>\n                            </div>\n                            <div class=\"bg-gray-100 rounded p-4 font-mono text-xs\">\n                                <div class=\"text-green-600\"># Пример использования</div>\n                                <div>from sentence_transformers import SentenceTransformer</div>\n                                <div><br></div>\n                                <div>model = SentenceTransformer(\"all-MiniLM-L6-v2\")</div>\n                                <div>sentences = [\"Пример текста\", \"Другой текст\"]</div>\n                                <div>embeddings = model.encode(sentences)</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"tab-content\" id=\"vector-search\">\n                    <h3 class=\"text-2xl font-bold mb-6\">Семантический поиск: FAISS vs HNSW vs Annoy</h3>\n                    \n                    <div class=\"overflow-x-auto mb-8\">\n                        <table class=\"w-full border-collapse bg-white rounded-lg overflow-hidden shadow-sm\">\n                            <thead class=\"bg-gray-100\">\n                                <tr>\n                                    <th class=\"border p-4 text-left\">Алгоритм</th>\n                                    <th class=\"border p-4 text-center\">Скорость</th>\n                                    <th class=\"border p-4 text-center\">Память</th>\n                                    <th class=\"border p-4 text-center\">Точность</th>\n                                    <th class=\"border p-4 text-center\">Сжатие</th>\n                                    <th class=\"border p-4 text-center\">GPU</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr class=\"hover:bg-gray-50\">\n                                    <td class=\"border p-4 font-semibold\">HNSW</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">❌</td>\n                                    <td class=\"border p-4 text-center\">❌</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50\">\n                                    <td class=\"border p-4 font-semibold\">FAISS</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">✅</td>\n                                    <td class=\"border p-4 text-center\">✅</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50\">\n                                    <td class=\"border p-4 font-semibold\">Annoy</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">⭐⭐⭐</td>\n                                    <td class=\"border p-4 text-center\">❌</td>\n                                    <td class=\"border p-4 text-center\">❌</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div class=\"grid md:grid-cols-3 gap-6\">\n                        <div class=\"bg-blue-50 border-l-4 border-blue-400 p-6 rounded\">\n                            <h4 class=\"font-bold text-blue-800 mb-2\">HNSW</h4>\n                            <p class=\"text-sm text-blue-700 mb-3\">Hierarchical Navigable Small World</p>\n                            <div class=\"text-xs\">\n                                <div class=\"mb-2\"><strong>Принцип:</strong> Многослойный граф с быстрой навигацией</div>\n                                <div class=\"mb-2\">✅ State-of-the-art результаты</div>\n                                <div>❌ Больше памяти на рёбра графа</div>\n                            </div>\n                        </div>\n\n                        <div class=\"bg-green-50 border-l-4 border-green-400 p-6 rounded\">\n                            <h4 class=\"font-bold text-green-800 mb-2\">FAISS</h4>\n                            <p class=\"text-sm text-green-700 mb-3\">Facebook AI Similarity Search</p>\n                            <div class=\"text-xs\">\n                                <div class=\"mb-2\"><strong>Принцип:</strong> Кластеризация + Product Quantization</div>\n                                <div class=\"mb-2\">✅ Сжатие векторов, GPU ускорение</div>\n                                <div>❌ Сложность настройки</div>\n                            </div>\n                        </div>\n\n                        <div class=\"bg-orange-50 border-l-4 border-orange-400 p-6 rounded\">\n                            <h4 class=\"font-bold text-orange-800 mb-2\">Annoy</h4>\n                            <p class=\"text-sm text-orange-700 mb-3\">Approximate Nearest neighbors Oh Yeah</p>\n                            <div class=\"text-xs\">\n                                <div class=\"mb-2\"><strong>Принцип:</strong> Бинарные деревья с рандомными проекциями</div>\n                                <div class=\"mb-2\">✅ Простота реализации</div>\n                                <div>❌ Высокое потребление памяти</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"tab-content\" id=\"metrics\">\n                    <h3 class=\"text-2xl font-bold mb-6\">Оценка качества поиска: Recall@k</h3>\n                    \n                    <div class=\"grid md:grid-cols-2 gap-8 mb-8\">\n                        <div>\n                            <h4 class=\"text-lg font-semibold mb-4 text-blue-800\">Метрики поиска (Retrieval)</h4>\n                            <div class=\"space-y-4\">\n                                <div class=\"bg-blue-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">Recall@k</h5>\n                                    <p class=\"text-sm text-gray-600\">Доля релевантных документов среди топ-k результатов</p>\n                                </div>\n                                <div class=\"bg-blue-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">Precision@k</h5>\n                                    <p class=\"text-sm text-gray-600\">Точность среди топ-k результатов</p>\n                                </div>\n                                <div class=\"bg-blue-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">MRR</h5>\n                                    <p class=\"text-sm text-gray-600\">Mean Reciprocal Rank - обратный ранг первого релевантного результата</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h4 class=\"text-lg font-semibold mb-4 text-green-800\">Метрики генерации</h4>\n                            <div class=\"space-y-4\">\n                                <div class=\"bg-green-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">Answer Relevancy</h5>\n                                    <p class=\"text-sm text-gray-600\">Релевантность ответа запросу</p>\n                                </div>\n                                <div class=\"bg-green-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">Faithfulness</h5>\n                                    <p class=\"text-sm text-gray-600\">Отсутствие галлюцинаций относительно контекста</p>\n                                </div>\n                                <div class=\"bg-green-50 p-4 rounded-lg\">\n                                    <h5 class=\"font-semibold\">Context Relevancy</h5>\n                                    <p class=\"text-sm text-gray-600\">Релевантность извлеченного контекста</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"bg-white border-2 border-purple-200 rounded-lg p-6\">\n                        <h4 class=\"text-lg font-semibold mb-4\">Формула Recall@k</h4>\n                        <div class=\"bg-purple-50 rounded-lg p-6 text-center\">\n                            <div class=\"text-xl font-mono\">\n                                Recall@k = <span class=\"text-purple-600 font-bold\">Количество релевантных документов в топ-k</span>\n                                / <span class=\"text-blue-600 font-bold\">Общее количество релевантных документов</span>\n                            </div>\n                            <div class=\"mt-4 text-sm text-gray-600\">\n                                Например: если из 5 релевантных документов найдено 3 в топ-10, то Recall@10 = 3/5 = 0.6\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Practice Section -->\n        <section id=\"practice\" class=\"section-padding section-bg-pattern\">\n            <div class=\"max-w-6xl mx-auto\">\n                <h2 class=\"text-4xl font-bold text-center mb-12 text-gray-800\">\n                    <i class=\"fas fa-code mr-3 text-green-600\"></i>\n                    Практические примеры\n                </h2>\n\n                <!-- Python Sandbox -->\n                <div class=\"bg-white rounded-xl card-shadow p-8 mb-8\">\n                    <div class=\"flex items-center justify-between mb-6\">\n                        <h3 class=\"text-2xl font-bold\">🐍 Python RAG Песочница</h3>\n                        <div class=\"sandbox-status text-blue-600\">\n                            <i class=\"fas fa-spinner fa-spin\"></i> Загрузка Pyodide...\n                        </div>\n                    </div>\n                    \n                    <div class=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\n                        <p class=\"text-sm\"><strong>💡 Совет:</strong> Измените код ниже и нажмите \"Запустить\" для экспериментов!</p>\n                    </div>\n                    \n                    <div class=\"grid lg:grid-cols-2 gap-6\">\n                        <div>\n                            <h4 class=\"font-semibold mb-3\">Базовый пример RAG</h4>\n                            <textarea class=\"code-editor w-full h-80 resize-none\" id=\"basic-rag-code\">\n# Простой пример RAG системы\nimport numpy as np\nfrom sklearn.metrics.pairwise import cosine_similarity\n\nclass SimpleRAG:\n    def __init__(self):\n        self.documents = []\n        self.embeddings = []\n    \n    def add_documents(self, docs):\n        \"\"\"Добавление документов (с мок-эмбеддингами)\"\"\"\n        for doc in docs:\n            # Простая имитация эмбеддинга\n            embedding = np.random.rand(5)  # 5-мерный вектор\n            self.documents.append(doc)\n            self.embeddings.append(embedding)\n        print(f\"✅ Добавлено {len(docs)} документов\")\n    \n    def search(self, query, top_k=2):\n        \"\"\"Поиск наиболее релевантных документов\"\"\"\n        if not self.documents:\n            return []\n        \n        # Мок-эмбеддинг запроса\n        query_emb = np.random.rand(5)\n        \n        # Вычисляем сходство\n        similarities = []\n        for i, doc_emb in enumerate(self.embeddings):\n            sim = cosine_similarity([query_emb], [doc_emb])[0][0]\n            similarities.append((i, sim))\n        \n        # Сортируем по убыванию сходства\n        similarities.sort(key=lambda x: x[1], reverse=True)\n        \n        # Возвращаем топ-k документов\n        results = []\n        for i in range(min(top_k, len(similarities))):\n            doc_idx, score = similarities[i]\n            results.append({\n                'document': self.documents[doc_idx],\n                'score': score\n            })\n        \n        return results\n    \n    def ask(self, query):\n        \"\"\"RAG запрос: поиск + генерация ответа\"\"\"\n        print(f\"🔍 Поиск по запросу: '{query}'\")\n        \n        # Поиск релевантных документов\n        results = self.search(query)\n        \n        if not results:\n            return \"Нет релевантных документов\"\n        \n        # Формирование контекста\n        context = \"\\\\n\".join([r['document'] for r in results])\n        \n        # Простая имитация генерации\n        print(f\"📄 Найдено документов: {len(results)}\")\n        for i, result in enumerate(results, 1):\n            print(f\"   {i}. ({result['score']:.3f}) {result['document'][:50]}...\")\n        \n        return f\"На основе найденного контекста: {context[:100]}...\"\n\n# Демонстрация\nrag = SimpleRAG()\n\n# Добавляем тестовые документы\ndocuments = [\n    \"RAG (Retrieval-Augmented Generation) объединяет поиск и генерацию для точных ответов\",\n    \"FAISS - библиотека Facebook для быстрого поиска по векторам\",\n    \"HNSW показывает лучшую производительность для приближенного поиска\",\n    \"Эмбеддинги преобразуют текст в числовые векторы для семантического поиска\",\n    \"Recall@k измеряет долю найденных релевантных документов в топ-k результатах\"\n]\n\nrag.add_documents(documents)\n\n# Тестируем запросы\nqueries = [\n    \"Что такое RAG?\",\n    \"Какой алгоритм поиска самый быстрый?\",\n    \"Как измерить качество поиска?\"\n]\n\nfor query in queries:\n    print(\"\\\\n\" + \"=\"*60)\n    answer = rag.ask(query)\n    print(f\"🤖 Ответ: {answer}\")\n                            </textarea>\n                            <div class=\"flex gap-3 mt-4\">\n                                <button onclick=\"RAGSeminar.runPythonCode(document.getElementById('basic-rag-code').value, 'basic-rag-output')\" \n                                        class=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\">\n                                    <i class=\"fas fa-play mr-2\"></i>Запустить код\n                                </button>\n                                <button onclick=\"RAGSeminar.copyToClipboard(document.getElementById('basic-rag-code').value)\" \n                                        class=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\">\n                                    <i class=\"fas fa-copy mr-2\"></i>Копировать\n                                </button>\n                            </div>\n                        </div>\n                        <div>\n                            <h4 class=\"font-semibold mb-3\">Результат выполнения</h4>\n                            <div class=\"output-section min-h-80\" id=\"basic-rag-output\">\n                                Нажмите \"Запустить код\" для выполнения примера...\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Embedding Visualization -->\n                <div class=\"bg-white rounded-xl card-shadow p-8 mb-8\">\n                    <h3 class=\"text-2xl font-bold mb-6\">\n                        <i class=\"fas fa-project-diagram mr-3 text-blue-600\"></i>\n                        Интерактивная визуализация эмбеддингов\n                    </h3>\n                    \n                    <div class=\"grid lg:grid-cols-3 gap-6\">\n                        <div class=\"lg:col-span-2\">\n                            <div id=\"embedding-visualization\" class=\"visualization-container\"></div>\n                            \n                            <!-- Query Input Section -->\n                            <div class=\"mt-4 p-4 bg-gray-50 rounded-lg border\">\n                                <h5 class=\"font-semibold mb-3 text-gray-700\">Добавить запрос:</h5>\n                                \n                                <!-- Quick Select Queries -->\n                                <div class=\"mb-3\">\n                                    <label class=\"block text-sm font-medium text-gray-600 mb-2\">Быстрый выбор:</label>\n                                    <div class=\"flex flex-wrap gap-2\">\n                                        <button onclick=\"selectPresetQuery('Алгоритмы машинного обучения')\" \n                                                class=\"preset-query-btn bg-blue-100 hover:bg-blue-200 text-blue-800 text-sm px-3 py-1 rounded-full transition-colors\">\n                                            Алгоритмы ML\n                                        </button>\n                                        <button onclick=\"selectPresetQuery('Приготовление борща')\" \n                                                class=\"preset-query-btn bg-orange-100 hover:bg-orange-200 text-orange-800 text-sm px-3 py-1 rounded-full transition-colors\">\n                                            Приготовление борща\n                                        </button>\n                                        <button onclick=\"selectPresetQuery('Спортивные соревнования')\" \n                                                class=\"preset-query-btn bg-green-100 hover:bg-green-200 text-green-800 text-sm px-3 py-1 rounded-full transition-colors\">\n                                            Спорт\n                                        </button>\n                                        <button onclick=\"selectPresetQuery('Векторный поиск')\" \n                                                class=\"preset-query-btn bg-purple-100 hover:bg-purple-200 text-purple-800 text-sm px-3 py-1 rounded-full transition-colors\">\n                                            Векторный поиск\n                                        </button>\n                                        <button onclick=\"selectPresetQuery('Нейронные сети')\" \n                                                class=\"preset-query-btn bg-indigo-100 hover:bg-indigo-200 text-indigo-800 text-sm px-3 py-1 rounded-full transition-colors\">\n                                            Нейросети\n                                        </button>\n                                    </div>\n                                </div>\n                                \n                                <!-- Custom Query Input -->\n                                <div class=\"mb-3\">\n                                    <label for=\"custom-query-input\" class=\"block text-sm font-medium text-gray-600 mb-2\">Или введите свой запрос:</label>\n                                    <div class=\"flex gap-2\">\n                                        <input type=\"text\" \n                                               id=\"custom-query-input\" \n                                               placeholder=\"Введите ваш поисковый запрос...\" \n                                               class=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                                               onkeypress=\"if(event.key==='Enter') addCustomQueryToVisualization()\">\n                                        <button onclick=\"addCustomQueryToVisualization()\" \n                                                class=\"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors whitespace-nowrap\">\n                                            ➕ Добавить\n                                        </button>\n                                    </div>\n                                </div>\n                                \n                                <!-- Control Buttons -->\n                                <div class=\"flex gap-3 flex-wrap\">\n                                    <button onclick=\"findSimilarInVisualization()\" \n                                            class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                                            id=\"find-similar-btn\" disabled>\n                                        🔍 Найти похожие\n                                    </button>\n                                    <button onclick=\"resetVisualization()\" \n                                            class=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\">\n                                        🔄 Сброс\n                                    </button>\n                                    <button onclick=\"showVisualizationHelp()\" \n                                            class=\"bg-yellow-600 text-white px-4 py-2 rounded-lg hover:bg-yellow-700 transition-colors\">\n                                        ❓ Справка\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h4 class=\"font-semibold mb-3\">Как работает семантический поиск:</h4>\n                            <div class=\"space-y-3 text-sm text-gray-700\">\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-circle text-blue-500 mt-2 mr-3 text-xs\"></i>\n                                    <span><strong>Синие точки</strong> - документы в векторном пространстве</span>\n                                </div>\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-circle text-red-500 mt-2 mr-3 text-xs\"></i>\n                                    <span><strong>Красные точки</strong> - пользовательские запросы</span>\n                                </div>\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-minus text-green-500 mt-2 mr-3\"></i>\n                                    <span><strong>Зеленая линия</strong> - наилучшее семантическое соответствие</span>\n                                </div>\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-minus text-blue-500 mt-2 mr-3\"></i>\n                                    <span><strong>Синие линии</strong> - семантически связанные документы</span>\n                                </div>\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-minus text-yellow-500 mt-2 mr-3\"></i>\n                                    <span><strong>Желтые линии</strong> - низкое сходство (разные категории)</span>\n                                </div>\n                                <div class=\"flex items-start\">\n                                    <i class=\"fas fa-percent mt-2 mr-3 text-purple-600\"></i>\n                                    <span><strong>Проценты</strong> - точная семантическая похожесть</span>\n                                </div>\n                            </div>\n                            \n                            <div class=\"mt-6 bg-orange-50 rounded-lg p-4 border border-orange-200\">\n                                <h5 class=\"font-semibold text-orange-800 mb-2\">🧠 Алгоритм учитывает:</h5>\n                                <ul class=\"text-sm text-orange-700 space-y-1\">\n                                    <li>• <strong>Семантические категории:</strong> ИИ/ML, Кулинария, Спорт</li>\n                                    <li>• <strong>Точное совпадение слов:</strong> приготовление ≈ готовить</li>\n                                    <li>• <strong>Межкатегорийные связи:</strong> борщ ≠ машинное обучение</li>\n                                    <li>• <strong>Контекстуальное понимание:</strong> реальный анализ значений</li>\n                                </ul>\n                            </div>\n                            \n                            <div class=\"mt-4 bg-blue-50 rounded-lg p-4\">\n                                <h5 class=\"font-semibold text-blue-800 mb-2\">💡 Попробуйте:</h5>\n                                <ul class=\"text-sm text-blue-700 space-y-1\">\n                                    <li>• Запрос \"Приготовление борща\" → высокое сходство с кулинарией</li>\n                                    <li>• Запрос про ИИ → найдет только ML-документы</li>\n                                    <li>• Смешанный запрос → покажет межкатегорийные различия</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Quiz Section -->\n        <section id=\"quiz\" class=\"bg-white section-padding\">\n            <div class=\"max-w-4xl mx-auto\">\n                <h2 class=\"text-4xl font-bold text-center mb-12 text-gray-800\">\n                    <i class=\"fas fa-brain mr-3 text-purple-600\"></i>\n                    Проверьте свои знания\n                </h2>\n                \n                <div class=\"bg-gradient-to-r from-purple-100 to-blue-100 rounded-xl p-8 mb-8\">\n                    <div class=\"text-center\">\n                        <i class=\"fas fa-trophy text-4xl text-yellow-500 mb-4\"></i>\n                        <h3 class=\"text-2xl font-bold mb-4\">Квиз по RAG технологиям</h3>\n                        <p class=\"text-gray-600 mb-6\">Проверьте, насколько хорошо вы усвоили материал семинара. 5 вопросов о ключевых концепциях RAG.</p>\n                        \n                        <div class=\"grid md:grid-cols-3 gap-6 text-center\">\n                            <div class=\"bg-white rounded-lg p-4\">\n                                <i class=\"fas fa-question-circle text-2xl text-blue-600 mb-2\"></i>\n                                <div class=\"font-semibold\">5 вопросов</div>\n                                <div class=\"text-sm text-gray-600\">О ключевых концепциях</div>\n                            </div>\n                            <div class=\"bg-white rounded-lg p-4\">\n                                <i class=\"fas fa-clock text-2xl text-green-600 mb-2\"></i>\n                                <div class=\"font-semibold\">Без ограничения</div>\n                                <div class=\"text-sm text-gray-600\">Времени на обдумывание</div>\n                            </div>\n                            <div class=\"bg-white rounded-lg p-4\">\n                                <i class=\"fas fa-medal text-2xl text-yellow-600 mb-2\"></i>\n                                <div class=\"font-semibold\">Мгновенный</div>\n                                <div class=\"text-sm text-gray-600\">Результат с объяснениями</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Quiz Container -->\n                <div id=\"rag-quiz\"></div>\n            </div>\n        </section>\n\n        <!-- Yandex Models Section -->\n        <section id=\"yandex\" class=\"section-padding bg-gradient-to-br from-orange-50 to-red-50\">\n            <div class=\"max-w-6xl mx-auto\">\n                <h2 class=\"text-4xl font-bold text-center mb-12 text-gray-800\">\n                    <i class=\"fas fa-rocket mr-3 text-orange-600\"></i>\n                    Yandex Foundation Models для RAG\n                </h2>\n\n                <!-- Model Comparison -->\n                <div class=\"grid lg:grid-cols-3 gap-6 mb-8\">\n                    <div class=\"bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300\">\n                        <div class=\"flex items-center mb-4\">\n                            <i class=\"fas fa-star text-2xl text-yellow-500 mr-3\"></i>\n                            <h3 class=\"text-xl font-bold\">YandexGPT Pro</h3>\n                        </div>\n                        <div class=\"space-y-3 text-sm\">\n                            <div class=\"flex justify-between\">\n                                <span>Контекст:</span>\n                                <span class=\"font-semibold\">32,000 токенов</span>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Качество:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                </div>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Скорость:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                </div>\n                            </div>\n                            <div class=\"pt-3 border-t\">\n                                <p class=\"text-gray-600\">Лучший выбор для сложных RAG задач с длинным контекстом</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300\">\n                        <div class=\"flex items-center mb-4\">\n                            <i class=\"fas fa-balance-scale text-2xl text-blue-500 mr-3\"></i>\n                            <h3 class=\"text-xl font-bold\">YandexGPT</h3>\n                        </div>\n                        <div class=\"space-y-3 text-sm\">\n                            <div class=\"flex justify-between\">\n                                <span>Контекст:</span>\n                                <span class=\"font-semibold\">8,000 токенов</span>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Качество:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                </div>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Скорость:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                </div>\n                            </div>\n                            <div class=\"pt-3 border-t\">\n                                <p class=\"text-gray-600\">Сбалансированное решение для большинства RAG применений</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"bg-white rounded-xl card-shadow p-6 hover:shadow-xl transition-all duration-300\">\n                        <div class=\"flex items-center mb-4\">\n                            <i class=\"fas fa-bolt text-2xl text-green-500 mr-3\"></i>\n                            <h3 class=\"text-xl font-bold\">YandexGPT Lite</h3>\n                        </div>\n                        <div class=\"space-y-3 text-sm\">\n                            <div class=\"flex justify-between\">\n                                <span>Контекст:</span>\n                                <span class=\"font-semibold\">4,000 токенов</span>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Качество:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                    <i class=\"fas fa-star text-gray-300\"></i>\n                                </div>\n                            </div>\n                            <div class=\"flex justify-between\">\n                                <span>Скорость:</span>\n                                <div class=\"flex\">\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                    <i class=\"fas fa-star text-yellow-400\"></i>\n                                </div>\n                            </div>\n                            <div class=\"pt-3 border-t\">\n                                <p class=\"text-gray-600\">Быстрые ответы для простых RAG запросов</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Enhanced Code Configuration Tool -->\n                <div class=\"bg-white rounded-xl card-shadow p-8\">\n                    <h3 class=\"text-2xl font-bold mb-6\">\n                        <i class=\"fas fa-cog mr-3 text-orange-600\"></i>\n                        Конфигуратор RAG с Yandex Models\n                    </h3>\n\n                    <!-- Configuration Tabs -->\n                    <div class=\"flex border-b border-gray-200 mb-6\" id=\"yandex-config-tabs\">\n                        <button class=\"tab px-6 py-3 text-lg font-medium active\" data-tab=\"yandex-config\">\n                            <i class=\"fas fa-sliders-h mr-2\"></i>Конфигурация\n                        </button>\n                        <button class=\"tab px-6 py-3 text-lg font-medium\" data-tab=\"yandex-code\">\n                            <i class=\"fas fa-code mr-2\"></i>Сгенерированный код\n                        </button>\n                        <button class=\"tab px-6 py-3 text-lg font-medium\" data-tab=\"yandex-sandbox\">\n                            <i class=\"fas fa-play-circle mr-2\"></i>Песочница\n                        </button>\n                    </div>\n\n                    <!-- Configuration Tab -->\n                    <div class=\"tab-content active\" id=\"yandex-config\">\n                        <div class=\"grid lg:grid-cols-2 gap-8\">\n                            <div>\n                                <h4 class=\"font-semibold mb-4 text-gray-800\">Параметры RAG системы:</h4>\n                                \n                                <div class=\"space-y-4\">\n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                            <i class=\"fas fa-brain mr-1 text-orange-500\"></i>Модель для генерации:\n                                        </label>\n                                        <select id=\"yandex-model-select\" class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-white\">\n                                            <option value=\"yandexgpt-pro\">YandexGPT Pro (32K контекст, лучшее качество)</option>\n                                            <option value=\"yandexgpt\" selected>YandexGPT (8K контекст, сбалансированный)</option>\n                                            <option value=\"yandexgpt-lite\">YandexGPT Lite (4K контекст, быстрый)</option>\n                                        </select>\n                                    </div>\n                                    \n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                            <i class=\"fas fa-plug mr-1 text-blue-500\"></i>API подход:\n                                        </label>\n                                        <select id=\"api-approach-select\" class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-white\">\n                                            <option value=\"sdk\">Yandex Cloud SDK (рекомендуется)</option>\n                                            <option value=\"openai\" selected>OpenAI Compatible API</option>\n                                        </select>\n                                    </div>\n                                    \n                                    <div class=\"grid grid-cols-2 gap-4\">\n                                        <div>\n                                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                                <i class=\"fas fa-list-ol mr-1 text-green-500\"></i>Top-K результатов:\n                                            </label>\n                                            <input type=\"number\" id=\"topk-input\" value=\"3\" min=\"1\" max=\"10\" \n                                                   class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500\">\n                                            <p class=\"text-xs text-gray-500 mt-1\">Количество документов для контекста</p>\n                                        </div>\n                                        <div>\n                                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                                <i class=\"fas fa-cut mr-1 text-purple-500\"></i>Размер чанка:\n                                            </label>\n                                            <input type=\"number\" id=\"chunk-size-input\" value=\"1000\" min=\"100\" max=\"4000\" step=\"100\"\n                                                   class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500\">\n                                            <p class=\"text-xs text-gray-500 mt-1\">Токенов на чанк</p>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                            <i class=\"fas fa-folder mr-1 text-indigo-500\"></i>Folder ID (опционально):\n                                        </label>\n                                        <input type=\"text\" id=\"folder-id-input\" placeholder=\"b1g2b3c4d5e6f7g8h9i0\" \n                                               class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500\">\n                                        <p class=\"text-xs text-gray-500 mt-1\">Ваш Folder ID из Yandex Cloud</p>\n                                    </div>\n                                    \n                                    <button onclick=\"generateYandexRAGCode()\" \n                                            class=\"w-full bg-gradient-to-r from-orange-600 to-red-600 text-white py-4 px-6 rounded-lg font-semibold hover:from-orange-700 hover:to-red-700 transition-all duration-200 transform hover:scale-105\">\n                                        <i class=\"fas fa-magic mr-2\"></i>Сгенерировать код RAG\n                                    </button>\n                                </div>\n                            </div>\n                            \n                            <div>\n                                <h4 class=\"font-semibold mb-4 text-gray-800\">Предварительный просмотр:</h4>\n                                <div class=\"bg-gray-50 rounded-lg p-6 h-96 overflow-y-auto border-2 border-dashed border-gray-300\">\n                                    <div class=\"text-center text-gray-500 mt-20\">\n                                        <i class=\"fas fa-code text-4xl mb-4\"></i>\n                                        <p class=\"text-lg mb-2\">Код будет сгенерирован здесь</p>\n                                        <p class=\"text-sm\">Настройте параметры слева и нажмите \"Сгенерировать код\"</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Generated Code Tab -->\n                    <div class=\"tab-content\" id=\"yandex-code\">\n                        <div class=\"mb-4 flex items-center justify-between\">\n                            <h4 class=\"font-semibold text-gray-800\">\n                                <i class=\"fas fa-file-code mr-2 text-blue-600\"></i>Сгенерированный Python код\n                            </h4>\n                            <div class=\"flex gap-2\">\n                                <button onclick=\"copyGeneratedCode()\" \n                                        class=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\">\n                                    <i class=\"fas fa-copy mr-2\"></i>Копировать\n                                </button>\n                                <button onclick=\"downloadGeneratedCode()\" \n                                        class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\n                                    <i class=\"fas fa-download mr-2\"></i>Скачать\n                                </button>\n                                <button onclick=\"sendCodeToSandbox()\" \n                                        class=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors\">\n                                    <i class=\"fas fa-play mr-2\"></i>В песочницу\n                                </button>\n                            </div>\n                        </div>\n                        \n                        <!-- Enhanced Code Editor -->\n                        <div class=\"relative\">\n                            <div class=\"absolute top-2 right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded z-10\">\n                                Python\n                            </div>\n                            <textarea id=\"yandex-generated-code-editor\" \n                                      class=\"w-full h-96 p-4 font-mono text-sm bg-gray-900 text-gray-100 rounded-lg border border-gray-600 focus:ring-2 focus:ring-orange-500 focus:border-orange-500 resize-none overflow-auto\"\n                                      placeholder=\"Настройте параметры на вкладке 'Конфигурация' и сгенерируйте код...\"\n                                      spellcheck=\"false\"></textarea>\n                        </div>\n\n                        <div class=\"mt-4 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4\">\n                            <h5 class=\"font-semibold text-blue-800 mb-2\">\n                                <i class=\"fas fa-lightbulb mr-2\"></i>Возможности редактора:\n                            </h5>\n                            <ul class=\"text-sm text-blue-700 space-y-1\">\n                                <li>• ✏️ Редактируйте код прямо в браузере</li>\n                                <li>• 🚀 Отправьте код в песочницу для выполнения</li>\n                                <li>• 📋 Копируйте или скачайте готовый файл</li>\n                                <li>• 🔧 Настройки сохраняются автоматически</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <!-- Interactive Sandbox Tab -->\n                    <div class=\"tab-content\" id=\"yandex-sandbox\">\n                        <div class=\"mb-4\">\n                            <h4 class=\"font-semibold text-gray-800 mb-2\">\n                                <i class=\"fas fa-flask mr-2 text-green-600\"></i>Интерактивная песочница Yandex RAG\n                            </h4>\n                            <p class=\"text-gray-600 text-sm\">Выполните сгенерированный код с реальными данными (без моков)</p>\n                        </div>\n\n                        <!-- Yandex Cloud Credentials Input -->\n                        <div class=\"mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                            <h5 class=\"font-semibold text-blue-800 mb-3\">\n                                <i class=\"fas fa-key mr-2\"></i>Yandex Cloud авторизация (обязательно для реального выполнения)\n                            </h5>\n                            <div class=\"grid md:grid-cols-2 gap-4\">\n                                <div>\n                                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                        <i class=\"fas fa-folder mr-1 text-blue-500\"></i>Folder ID:\n                                    </label>\n                                    <input type=\"text\" \n                                           id=\"sandbox-folder-id\" \n                                           placeholder=\"b1g2b3c4d5e6f7g8h9i0\" \n                                           class=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm font-mono\">\n                                    <p class=\"text-xs text-gray-500 mt-1\">Ваш Folder ID из Yandex Cloud</p>\n                                </div>\n                                <div>\n                                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                        <i class=\"fas fa-key mr-1 text-orange-500\"></i>API Key:\n                                    </label>\n                                    <input type=\"password\" \n                                           id=\"sandbox-api-key\" \n                                           placeholder=\"AQVN...\" \n                                           class=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm font-mono\">\n                                    <p class=\"text-xs text-gray-500 mt-1\">API ключ или IAM токен</p>\n                                </div>\n                            </div>\n                            <div class=\"mt-3 flex items-center gap-3\">\n                                <button onclick=\"injectCredentialsIntoCode()\" \n                                        class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\">\n                                    <i class=\"fas fa-inject mr-2\"></i>Внедрить в код\n                                </button>\n                                <button onclick=\"validateCredentials()\" \n                                        class=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm\">\n                                    <i class=\"fas fa-check mr-2\"></i>Проверить\n                                </button>\n                                <div id=\"credentials-status\" class=\"text-sm text-gray-600\">\n                                    <i class=\"fas fa-info-circle mr-1\"></i>Введите данные для авторизации\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"grid lg:grid-cols-2 gap-6\">\n                            <div>\n                                <div class=\"flex items-center justify-between mb-3\">\n                                    <h5 class=\"font-medium text-gray-700\">Исполняемый код:</h5>\n                                    <div class=\"flex gap-2\">\n                                        <button onclick=\"loadCodeFromEditor()\" \n                                                class=\"text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition-colors\">\n                                            <i class=\"fas fa-sync mr-1\"></i>Загрузить из редактора\n                                        </button>\n                                        <div class=\"sandbox-status text-blue-600 text-sm\">\n                                            <i class=\"fas fa-spinner fa-spin\"></i> Pyodide загружается...\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <textarea id=\"yandex-sandbox-code\" \n                                          class=\"w-full h-64 p-3 font-mono text-sm bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 resize-none\"\n                                          placeholder=\"Код для выполнения загрузится сюда автоматически...\"></textarea>\n                                \n                                <div class=\"flex gap-3 mt-3\">\n                                    <button onclick=\"runYandexSandboxCode()\" \n                                            class=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors flex-1\">\n                                        <i class=\"fas fa-play mr-2\"></i>Выполнить код\n                                    </button>\n                                    <button onclick=\"clearSandboxOutput()\" \n                                            class=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors\">\n                                        <i class=\"fas fa-trash mr-2\"></i>Очистить\n                                    </button>\n                                </div>\n\n                                <div class=\"mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                                    <h6 class=\"font-semibold text-yellow-800 mb-2\">\n                                        <i class=\"fas fa-exclamation-triangle mr-2\"></i>Важно:\n                                    </h6>\n                                    <ul class=\"text-sm text-yellow-700 space-y-1\">\n                                        <li>• Код выполняется локально в браузере</li>\n                                        <li>• API ключи Yandex нужно устанавливать отдельно</li>\n                                        <li>• Поддерживаются numpy, pandas, requests</li>\n                                        <li>• Реальные HTTP запросы возможны</li>\n                                    </ul>\n                                </div>\n                            </div>\n                            \n                            <div>\n                                <h5 class=\"font-medium text-gray-700 mb-3\">Результат выполнения:</h5>\n                                <div class=\"output-section min-h-64 max-h-80 overflow-y-auto\" id=\"yandex-sandbox-output\">\n                                    Выполните код для просмотра результатов...\n                                </div>\n\n                                <div class=\"mt-4 bg-green-50 border border-green-200 rounded-lg p-3\">\n                                    <h6 class=\"font-semibold text-green-800 mb-2\">\n                                        <i class=\"fas fa-rocket mr-2\"></i>Возможности:\n                                    </h6>\n                                    <ul class=\"text-sm text-green-700 space-y-1\">\n                                        <li>• 🔄 Реальное выполнение Python кода</li>\n                                        <li>• 📦 Автоматическая установка пакетов</li>\n                                        <li>• 🌐 HTTP запросы к внешним API</li>\n                                        <li>• 📊 Визуализация данных с matplotlib</li>\n                                        <li>• 🧪 Тестирование RAG алгоритмов</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Getting Started Guide -->\n                    <div class=\"mt-8 bg-gradient-to-r from-orange-50 to-red-50 border-l-4 border-orange-400 rounded-lg p-6\">\n                        <div class=\"flex items-start\">\n                            <i class=\"fas fa-rocket text-orange-600 text-2xl mt-1 mr-4\"></i>\n                            <div>\n                                <p class=\"font-semibold text-orange-800 mb-3 text-lg\">🚀 Быстрый старт с Yandex Foundation Models</p>\n                                <div class=\"grid md:grid-cols-2 gap-6\">\n                                    <div>\n                                        <h6 class=\"font-semibold text-orange-800 mb-2\">Подготовка:</h6>\n                                        <ol class=\"text-sm text-orange-700 space-y-1\">\n                                            <li>1. 📝 Зарегистрируйтесь в <a href=\"https://cloud.yandex.ru\" target=\"_blank\" class=\"underline hover:text-orange-900\">Yandex Cloud</a></li>\n                                            <li>2. 🔑 Создайте сервисный аккаунт</li>\n                                            <li>3. 🛠️ Получите API ключ или IAM токен</li>\n                                            <li>4. 📦 Установите SDK: <code class=\"bg-orange-100 px-1 rounded font-mono\">pip install yandexcloud</code></li>\n                                        </ol>\n                                    </div>\n                                    <div>\n                                        <h6 class=\"font-semibold text-orange-800 mb-2\">Использование:</h6>\n                                        <ol class=\"text-sm text-orange-700 space-y-1\">\n                                            <li>5. ⚙️ Настройте параметры на вкладке \"Конфигурация\"</li>\n                                            <li>6. 🔄 Сгенерируйте код RAG</li>\n                                            <li>7. ✏️ Отредактируйте код под свои нужды</li>\n                                            <li>8. 🧪 Протестируйте в песочнице</li>\n                                        </ol>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"mt-4 p-3 bg-orange-100 rounded-lg\">\n                                    <p class=\"text-sm text-orange-800\">\n                                        <i class=\"fas fa-info-circle mr-2\"></i>\n                                        <strong>Совет:</strong> Начните с OpenAI Compatible API - это самый простой способ интеграции с существующими проектами.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Conclusion Section -->\n        <section class=\"gradient-bg text-white section-padding\">\n            <div class=\"max-w-4xl mx-auto text-center\">\n                <i class=\"fas fa-graduation-cap text-6xl mb-6 opacity-90\"></i>\n                <h2 class=\"text-4xl font-bold mb-6\">Поздравляем!</h2>\n                <p class=\"text-xl mb-8 opacity-90\">\n                    Вы изучили основы RAG технологии и готовы применить знания на практике\n                </p>\n                \n                <div class=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 mb-8\">\n                    <h3 class=\"text-2xl font-bold mb-6\">Что вы изучили:</h3>\n                    <div class=\"grid md:grid-cols-2 gap-6 text-left\">\n                        <div>\n                            <ul class=\"space-y-3\">\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Архитектуру RAG систем</span>\n                                </li>\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Методы векторизации и эмбеддинги</span>\n                                </li>\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Алгоритмы семантического поиска</span>\n                                </li>\n                            </ul>\n                        </div>\n                        <div>\n                            <ul class=\"space-y-3\">\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Метрики оценки качества</span>\n                                </li>\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Практическую реализацию RAG</span>\n                                </li>\n                                <li class=\"flex items-start\">\n                                    <i class=\"fas fa-check-circle text-green-300 mt-1 mr-3\"></i>\n                                    <span>Интеграцию с Yandex Foundation Models</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                    <a href=\"#overview\" class=\"bg-white text-purple-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors\">\n                        <i class=\"fas fa-redo mr-2\"></i>Пройти еще раз\n                    </a>\n                    <a href=\"/vector_databases_enhanced_guide\" class=\"bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors\">\n                        <i class=\"fas fa-database mr-2\"></i>Векторные БД: Подробно\n                    </a>\n                    <button onclick=\"RAGSeminar.downloadCode(getFullSeminarNotes(), 'rag-seminar-notes.txt')\" \n                            class=\"bg-purple-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-purple-700 transition-colors\">\n                        <i class=\"fas fa-download mr-2\"></i>Скачать конспект\n                    </button>\n                </div>\n                \n                <div class=\"mt-8 text-sm opacity-75\">\n                    <p>Спасибо за участие в семинаре! Удачи в изучении RAG технологий 🚀</p>\n                </div>\n            </div>\n        </section>\n\n        <!-- Footer -->\n        <footer class=\"bg-gray-800 text-white py-12\">\n            <div class=\"max-w-6xl mx-auto px-4\">\n                <div class=\"grid md:grid-cols-3 gap-8\">\n                    <div>\n                        <h3 class=\"text-xl font-bold mb-4\">\n                            <i class=\"fas fa-brain mr-2\"></i>RAG Семинар\n                        </h3>\n                        <p class=\"text-gray-300 mb-4\">\n                            Интерактивное изучение технологий Retrieval-Augmented Generation\n                        </p>\n                        <div class=\"flex space-x-4\">\n                            <a href=\"#\" class=\"text-gray-300 hover:text-white transition-colors\" title=\"GitHub\">\n                                <i class=\"fab fa-github text-xl\"></i>\n                            </a>\n                            <a href=\"https://t.me/llm_notes\" target=\"_blank\" class=\"text-gray-300 hover:text-white transition-colors\" title=\"Telegram канал LLM Notes\">\n                                <i class=\"fab fa-telegram text-xl\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"font-semibold mb-4\">Разделы</h4>\n                        <ul class=\"space-y-2 text-gray-300\">\n                            <li><a href=\"#overview\" class=\"hover:text-white transition-colors\">Обзор</a></li>\n                            <li><a href=\"#theory\" class=\"hover:text-white transition-colors\">Теория</a></li>\n                            <li><a href=\"#practice\" class=\"hover:text-white transition-colors\">Практика</a></li>\n                            <li><a href=\"#quiz\" class=\"hover:text-white transition-colors\">Квиз</a></li>\n                            <li><a href=\"/vector_databases_enhanced_guide\" class=\"hover:text-white transition-colors text-blue-400\">📚 Векторные БД: Подробно</a></li>\n                        </ul>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"font-semibold mb-4\">Технологии</h4>\n                        <ul class=\"space-y-2 text-gray-300\">\n                            <li>Python & Pyodide</li>\n                            <li>D3.js Визуализации</li>\n                            <li>Yandex Foundation Models</li>\n                            <li>Cloudflare Pages</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"border-t border-gray-700 mt-8 pt-8 text-center text-gray-400\">\n                    <p>&copy; 2025 RAG Семинар. Сделано с ❤️ для изучения AI технологий</p>\n                    <p class=\"mt-2 text-sm\">\n                        Подписывайтесь на наш \n                        <a href=\"https://t.me/llm_notes\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n                            <i class=\"fab fa-telegram mr-1\"></i>Telegram канал\n                        </a> \n                        для получения новых материалов по AI\n                    </p>\n                </div>\n            </div>\n        </footer>\n\n        <!-- Load scripts -->\n        <script src=\"/static/app.js\"></script>\n        \n        <script>\n            // Visualization and interaction functions\n            let visualizationSvg = null;\n            let queries = [];\n            let currentQuery = null;\n            \n            // Document data for visualization\n            const documents = [\n                {id: \"doc1\", x: 100, y: 150, text: \"Машинное обучение\", type: \"document\"},\n                {id: \"doc2\", x: 120, y: 170, text: \"Нейронные сети\", type: \"document\"},\n                {id: \"doc3\", x: 300, y: 100, text: \"Приготовление пасты\", type: \"document\"},\n                {id: \"doc4\", x: 320, y: 120, text: \"Итальянская кухня\", type: \"document\"},\n                {id: \"doc5\", x: 200, y: 300, text: \"Футбольный матч\", type: \"document\"},\n                {id: \"doc6\", x: 180, y: 280, text: \"Спортивные новости\", type: \"document\"}\n            ];\n            \n            function initializeVisualization() {\n                const container = document.getElementById('embedding-visualization');\n                if (!container || visualizationSvg) return;\n                \n                const width = 600, height = 400;\n                \n                visualizationSvg = d3.select(container)\n                    .append('svg')\n                    .attr('width', '100%')\n                    .attr('height', height)\n                    .attr('viewBox', \\`0 0 \\${width} \\${height}\\`)\n                    .style('background', 'white');\n                \n                // Add documents\n                const dots = visualizationSvg.selectAll('.document')\n                    .data(documents)\n                    .enter()\n                    .append('circle')\n                    .attr('class', 'document')\n                    .attr('cx', d => d.x)\n                    .attr('cy', d => d.y)\n                    .attr('r', 8)\n                    .attr('fill', '#4285f4')\n                    .attr('stroke', '#fff')\n                    .attr('stroke-width', 2)\n                    .style('cursor', 'pointer');\n                \n                // Add labels\n                visualizationSvg.selectAll('.label')\n                    .data(documents)\n                    .enter()\n                    .append('text')\n                    .attr('class', 'label')\n                    .attr('x', d => d.x)\n                    .attr('y', d => d.y - 15)\n                    .attr('text-anchor', 'middle')\n                    .attr('font-size', '12px')\n                    .attr('fill', '#333')\n                    .text(d => d.text);\n                \n                // Tooltips\n                dots.on('mouseover', function(event, d) {\n                    d3.select('body').append('div')\n                        .attr('class', 'tooltip')\n                        .style('position', 'absolute')\n                        .style('background', 'rgba(0,0,0,0.8)')\n                        .style('color', 'white')\n                        .style('padding', '8px')\n                        .style('border-radius', '4px')\n                        .style('pointer-events', 'none')\n                        .style('opacity', 0)\n                        .html(\\`<strong>\\${d.text}</strong><br>ID: \\${d.id}\\`)\n                        .style('left', (event.pageX + 10) + 'px')\n                        .style('top', (event.pageY - 10) + 'px')\n                        .transition()\n                        .duration(200)\n                        .style('opacity', 1);\n                })\n                .on('mouseout', function() {\n                    d3.selectAll('.tooltip').remove();\n                });\n            }\n            \n            // Preset queries with strategic positioning for better demonstration\n            const presetQueries = {\n                'Алгоритмы машинного обучения': { x: 110, y: 160, category: 'AI' },\n                'Нейронные сети': { x: 130, y: 180, category: 'AI' },\n                'Векторный поиск': { x: 140, y: 140, category: 'AI' },\n                'Рецепты итальянской кухни': { x: 310, y: 110, category: 'Food' },\n                'Приготовление пасты': { x: 290, y: 130, category: 'Food' },\n                'Приготовление борща': { x: 320, y: 90, category: 'Food' },\n                'Варка супа': { x: 280, y: 140, category: 'Food' },\n                'Спортивные соревнования': { x: 190, y: 290, category: 'Sports' },\n                'Футбольные матчи': { x: 210, y: 310, category: 'Sports' }\n            };\n            \n            function selectPresetQuery(queryText) {\n                document.getElementById('custom-query-input').value = queryText;\n                RAGSeminar.showNotification(\\`Выбран запрос: \"\\${queryText}\"\\`, 'info');\n            }\n            \n            function addCustomQueryToVisualization() {\n                const input = document.getElementById('custom-query-input');\n                const queryText = input.value.trim();\n                \n                if (!queryText) {\n                    RAGSeminar.showNotification('Введите текст запроса!', 'warning');\n                    return;\n                }\n                \n                addQueryToVisualization(queryText);\n                input.value = '';\n            }\n            \n            function addQueryToVisualization(queryText = null) {\n                if (!visualizationSvg) return;\n                \n                const finalQueryText = queryText || \\`Запрос \\${queries.length + 1}\\`;\n                let x, y;\n                \n                // Use strategic positioning for preset queries\n                if (queryText && presetQueries[queryText]) {\n                    const preset = presetQueries[queryText];\n                    x = preset.x + (Math.random() - 0.5) * 20; // Small random offset\n                    y = preset.y + (Math.random() - 0.5) * 20;\n                } else {\n                    x = Math.random() * 500 + 50;\n                    y = Math.random() * 300 + 50;\n                }\n                \n                const queryId = \\`query_\\${queries.length + 1}\\`;\n                \n                const query = {\n                    id: queryId,\n                    x: x,\n                    y: y,\n                    text: finalQueryText,\n                    type: \"query\"\n                };\n                \n                queries.push(query);\n                currentQuery = query;\n                \n                // Clear previous connections when adding new query\n                visualizationSvg.selectAll('.connection').remove();\n                visualizationSvg.selectAll('.similarity-text').remove();\n                \n                visualizationSvg.append('circle')\n                    .attr('class', 'query')\n                    .attr('id', queryId)\n                    .attr('cx', x)\n                    .attr('cy', y)\n                    .attr('r', 10)\n                    .attr('fill', '#ea4335')\n                    .attr('stroke', '#fff')\n                    .attr('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .on('click', function() {\n                        currentQuery = query;\n                        // Highlight selected query\n                        visualizationSvg.selectAll('.query').attr('stroke-width', 2);\n                        d3.select(this).attr('stroke-width', 4);\n                        updateFindButton();\n                    });\n                \n                const label = visualizationSvg.append('text')\n                    .attr('class', 'query-label')\n                    .attr('id', \\`\\${queryId}-label\\`)\n                    .attr('x', x)\n                    .attr('y', y - 18)\n                    .attr('text-anchor', 'middle')\n                    .attr('font-size', '11px')\n                    .attr('font-weight', 'bold')\n                    .attr('fill', '#ea4335')\n                    .style('cursor', 'pointer')\n                    .on('click', function() {\n                        currentQuery = query;\n                        updateFindButton();\n                    });\n                \n                // Wrap long text\n                const words = finalQueryText.split(' ');\n                if (words.length > 2) {\n                    label.text('');\n                    label.append('tspan')\n                        .attr('x', x)\n                        .attr('dy', 0)\n                        .text(words.slice(0, 2).join(' '));\n                    if (words.length > 2) {\n                        label.append('tspan')\n                            .attr('x', x)\n                            .attr('dy', '1.2em')\n                            .text(words.slice(2).join(' '));\n                    }\n                } else {\n                    label.text(finalQueryText);\n                }\n                \n                updateFindButton();\n                RAGSeminar.showNotification(\\`Запрос \"\\${finalQueryText}\" добавлен!\\`, 'success');\n            }\n            \n            function updateFindButton() {\n                const findBtn = document.getElementById('find-similar-btn');\n                if (currentQuery) {\n                    findBtn.disabled = false;\n                    findBtn.classList.remove('disabled:bg-gray-400', 'disabled:cursor-not-allowed');\n                } else {\n                    findBtn.disabled = true;\n                    findBtn.classList.add('disabled:bg-gray-400', 'disabled:cursor-not-allowed');\n                }\n            }\n            \n            function findSimilarInVisualization() {\n                if (!currentQuery || !visualizationSvg) {\n                    RAGSeminar.showNotification('Сначала добавьте или выберите запрос!', 'warning');\n                    return;\n                }\n                \n                // Advanced semantic similarity calculation\n                const similarities = documents.map(doc => {\n                    const queryLower = currentQuery.text.toLowerCase();\n                    const docLower = doc.text.toLowerCase();\n                    \n                    // Расширенные семантические категории с более точными терминами\n                    const semanticCategories = {\n                        ai: {\n                            terms: ['машинное', 'обучение', 'нейронн', 'алгоритм', 'векторн', 'поиск', 'искусственн', 'модел', 'данн', 'ai', 'ml'],\n                            boost: 0.9\n                        },\n                        food: {\n                            terms: ['кухн', 'паст', 'приготов', 'рецепт', 'италь', 'еда', 'блюд', 'готов', 'борщ', 'суп', 'варить', 'жарить'],\n                            boost: 0.85\n                        },\n                        sports: {\n                            terms: ['спорт', 'футбол', 'матч', 'соревнов', 'игра', 'команда', 'тренир', 'физическ'],\n                            boost: 0.8\n                        }\n                    };\n                    \n                    // Определение категории запроса и документа\n                    let queryCategory = null;\n                    let docCategory = null;\n                    let maxQueryScore = 0;\n                    let maxDocScore = 0;\n                    \n                    for (const [category, data] of Object.entries(semanticCategories)) {\n                        // Подсчет совпадений для запроса\n                        const queryMatches = data.terms.filter(term => queryLower.includes(term)).length;\n                        const queryScore = queryMatches / data.terms.length;\n                        \n                        if (queryScore > maxQueryScore) {\n                            maxQueryScore = queryScore;\n                            queryCategory = category;\n                        }\n                        \n                        // Подсчет совпадений для документа\n                        const docMatches = data.terms.filter(term => docLower.includes(term)).length;\n                        const docScore = docMatches / data.terms.length;\n                        \n                        if (docScore > maxDocScore) {\n                            maxDocScore = docScore;\n                            docCategory = category;\n                        }\n                    }\n                    \n                    // Расчет семантической похожести\n                    let semanticSimilarity = 0;\n                    let isSemanticMatch = false;\n                    \n                    if (queryCategory && docCategory) {\n                        if (queryCategory === docCategory) {\n                            // Одна категория - высокое сходство\n                            semanticSimilarity = Math.min(maxQueryScore, maxDocScore) * semanticCategories[queryCategory].boost;\n                            isSemanticMatch = true;\n                        } else {\n                            // Разные категории - очень низкое сходство\n                            semanticSimilarity = 0.1;\n                        }\n                    } else {\n                        // Если категория не определена - средне-низкое сходство\n                        semanticSimilarity = 0.2;\n                    }\n                    \n                    // Дополнительная проверка на прямое совпадение слов\n                    const queryWords = queryLower.split(/\\\\s+/);\n                    const docWords = docLower.split(/\\\\s+/);\n                    let directWordMatches = 0;\n                    \n                    queryWords.forEach(qword => {\n                        docWords.forEach(dword => {\n                            if (qword.length > 3 && dword.includes(qword.substring(0, 4))) {\n                                directWordMatches++;\n                            }\n                        });\n                    });\n                    \n                    const directMatchBonus = Math.min(directWordMatches * 0.2, 0.4);\n                    \n                    // Финальная похожесть (0-1)\n                    const finalSimilarity = Math.min(1, semanticSimilarity + directMatchBonus);\n                    \n                    // Геометрическое расстояние для визуализации (менее важно)\n                    const euclideanDist = Math.sqrt(\n                        Math.pow(doc.x - currentQuery.x, 2) + \n                        Math.pow(doc.y - currentQuery.y, 2)\n                    );\n                    \n                    return { \n                        doc, \n                        distance: euclideanDist, \n                        similarity: finalSimilarity,\n                        semanticMatch: isSemanticMatch,\n                        queryCategory,\n                        docCategory,\n                        directMatches: directWordMatches\n                    };\n                });\n                \n                // Sort by similarity (higher is better)\n                similarities.sort((a, b) => b.similarity - a.similarity);\n                const topK = similarities.slice(0, 3);\n                \n                // Clear previous connections\n                visualizationSvg.selectAll('.connection').remove();\n                visualizationSvg.selectAll('.similarity-text').remove();\n                \n                // Draw connections with enhanced visualization\n                topK.forEach((item, index) => {\n                    const doc = item.doc;\n                    const similarity = item.similarity;\n                    const isSemanticMatch = item.semanticMatch;\n                    \n                    // Color coding: green for best match, blue for semantic matches, yellow for distance-based\n                    let strokeColor;\n                    if (index === 0) {\n                        strokeColor = '#34a853'; // Green for best match\n                    } else if (isSemanticMatch) {\n                        strokeColor = '#4285f4'; // Blue for semantic matches\n                    } else {\n                        strokeColor = '#fbbc04'; // Yellow for distance-based\n                    }\n                    \n                    visualizationSvg.append('line')\n                        .attr('class', 'connection')\n                        .attr('x1', currentQuery.x)\n                        .attr('y1', currentQuery.y)\n                        .attr('x2', doc.x)\n                        .attr('y2', doc.y)\n                        .attr('stroke', strokeColor)\n                        .attr('stroke-width', 4 - index * 0.8)\n                        .attr('stroke-dasharray', index === 0 ? '0' : '8,4')\n                        .attr('opacity', 0.8);\n                    \n                    const midX = (currentQuery.x + doc.x) / 2;\n                    const midY = (currentQuery.y + doc.y) / 2;\n                    \n                    // Similarity score with background for better readability\n                    const scoreGroup = visualizationSvg.append('g')\n                        .attr('class', 'similarity-text');\n                    \n                    scoreGroup.append('rect')\n                        .attr('x', midX - 15)\n                        .attr('y', midY - 8)\n                        .attr('width', 30)\n                        .attr('height', 16)\n                        .attr('fill', 'white')\n                        .attr('stroke', strokeColor)\n                        .attr('stroke-width', 1)\n                        .attr('rx', 8)\n                        .attr('opacity', 0.9);\n                    \n                    scoreGroup.append('text')\n                        .attr('x', midX)\n                        .attr('y', midY + 4)\n                        .attr('text-anchor', 'middle')\n                        .attr('font-size', '10px')\n                        .attr('font-weight', 'bold')\n                        .attr('fill', strokeColor)\n                        .text(similarity.toFixed(2));\n                });\n                \n                // Show detailed results summary\n                const bestMatch = topK[0];\n                const semanticMatches = topK.filter(item => item.semanticMatch).length;\n                \n                let message = \\`🔍 Анализ запроса \"\\${currentQuery.text}\":\\\\n\\`;\n                \n                // Analyze query category\n                if (bestMatch.queryCategory) {\n                    const categoryNames = { ai: 'ИИ/ML', food: 'Кулинария', sports: 'Спорт' };\n                    message += \\`📂 Категория запроса: \\${categoryNames[bestMatch.queryCategory]}\\\\n\\`;\n                }\n                \n                // Show top matches with detailed explanation\n                topK.forEach((item, i) => {\n                    const categoryNames = { ai: 'ИИ/ML', food: 'Кулинария', sports: 'Спорт' };\n                    const matchReason = item.semanticMatch ? \n                        \\`семантическое сходство (\\${categoryNames[item.docCategory]})\\` : \n                        'низкое сходство (разные категории)';\n                    \n                    message += \\`\\\\n\\${i + 1}. \"\\${item.doc.text}\" - \\${(item.similarity * 100).toFixed(0)}% (\\${matchReason})\\`;\n                });\n                \n                if (semanticMatches === 0) {\n                    message += '\\\\n\\\\n⚠️ Семантически похожих документов не найдено!';\n                } else {\n                    message += \\`\\\\n\\\\n✅ Найдено \\${semanticMatches} семантически связанных документов\\`;\n                }\n                \n                // Show alert with detailed explanation\n                alert(message);\n                \n                // Also show a shorter notification\n                const shortMessage = semanticMatches > 0 ? \n                    \\`Найдено \\${semanticMatches} семантически связанных документов\\` :\n                    'Семантически похожих документов не найдено';\n                    \n                RAGSeminar.showNotification(shortMessage, semanticMatches > 0 ? 'success' : 'warning', 4000);\n                \n                // Update progress\n                RAGSeminar.updateProgress(65);\n            }\n            \n            function showVisualizationHelp() {\n                const helpText = \\`\n📊 Как работает интерактивная визуализация эмбеддингов:\n\n🔵 Синие точки - документы в векторном пространстве\n🔴 Красные точки - пользовательские запросы\n🟢 Зеленые линии - наилучшее соответствие\n🔵 Синие линии - семантические соответствия\n🟡 Желтые линии - соответствия по расстоянию\n📊 Числа - показатели сходства (0-1)\n\n💡 Попробуйте:\n• Выберите готовый запрос из категорий\n• Добавьте запрос рядом с группой документов\n• Посмотрите, как алгоритм находит семантически похожие документы\n• Обратите внимание на различные типы соответствий\n\n🎯 Алгоритм учитывает:\n• Геометрическое расстояние в пространстве\n• Семантическую близость по тематикам\n• Весовые коэффициенты для разных категорий\n                \\`;\n                \n                alert(helpText);\n            }\n            \n            function resetVisualization() {\n                if (!visualizationSvg) return;\n                \n                visualizationSvg.selectAll('.query, .query-label, .connection, .similarity-text').remove();\n                queries = [];\n                currentQuery = null;\n                \n                // Reset input and button states\n                document.getElementById('custom-query-input').value = '';\n                updateFindButton();\n                \n                // Reset document styling\n                visualizationSvg.selectAll('.document')\n                    .attr('fill', '#4285f4')\n                    .attr('r', 8);\n                \n                RAGSeminar.showNotification('Визуализация сброшена', 'info');\n            }\n            \n            // Enhanced Yandex code generator with improved formatting and real implementations\n            function generateYandexRAGCode() {\n                const model = document.getElementById('yandex-model-select').value;\n                const apiApproach = document.getElementById('api-approach-select').value;\n                const topK = document.getElementById('topk-input').value;\n                const chunkSize = document.getElementById('chunk-size-input').value;\n                const folderId = document.getElementById('folder-id-input').value || 'your-folder-id';\n                \n                let code = '';\n                \n                if (apiApproach === 'openai') {\n                    code = generateOpenAICode(model, topK, chunkSize, folderId);\n                } else if (apiApproach === 'sdk') {\n                    code = generateSDKCode(model, topK, chunkSize, folderId);\n                }\n                \n                // Update both display areas\n                const codeEditor = document.getElementById('yandex-generated-code-editor');\n                if (codeEditor) {\n                    codeEditor.value = code;\n                }\n                \n                // Switch to code tab\n                switchYandexTab('yandex-code');\n                \n                RAGSeminar.showNotification('Код сгенерирован и готов к редактированию!', 'success');\n            }\n\n            function generateOpenAICode(model, topK, chunkSize, folderId) {\n                return \\`\"\"\"\nRAG система с Yandex Foundation Models через OpenAI Compatible API\nАвтоматически сгенерированный код для интеграции\n\"\"\"\n\nimport openai\nimport numpy as np\nimport os\nimport requests\nfrom typing import List, Dict\nimport json\n\nclass YandexRAG:\n    \"\"\"\n    RAG система с использованием Yandex Foundation Models\n    через OpenAI Compatible API\n    \"\"\"\n    \n    def __init__(self):\n        \"\"\"Инициализация RAG системы\"\"\"\n        self.api_key = os.getenv(\"YANDEX_CLOUD_API_KEY\")\n        self.folder_id = \"\\${folderId}\"\n        self.base_url = \"https://llm.api.cloud.yandex.net/foundationModels/v1/\"\n        \n        if not self.api_key:\n            raise ValueError(\"Установите переменную окружения YANDEX_CLOUD_API_KEY\")\n        \n        # Настройка OpenAI клиента для Yandex\n        self.client = openai.OpenAI(\n            api_key=self.api_key,\n            base_url=self.base_url\n        )\n        \n        self.embedding_model = f\"emb://\\${folderId}/text-search-doc/latest\"\n        self.generation_model = f\"gpt://\\${folderId}/\\${model}/latest\"\n        self.documents = []\n        \n        print(f\"✅ YandexRAG инициализирован с моделью: \\${model}\")\n    \n    def get_embeddings(self, texts: List[str]) -> List[List[float]]:\n        \"\"\"\n        Получение эмбеддингов через Yandex API\n        \n        Args:\n            texts: Список текстов для векторизации\n            \n        Returns:\n            Список векторов эмбеддингов\n        \"\"\"\n        embeddings = []\n        headers = {\n            \"Authorization\": f\"Bearer {self.api_key}\",\n            \"Content-Type\": \"application/json\"\n        }\n        \n        for text in texts:\n            payload = {\n                \"modelUri\": self.embedding_model,\n                \"text\": text\n            }\n            \n            try:\n                response = requests.post(\n                    f\"{self.base_url}textEmbedding\",\n                    headers=headers,\n                    json=payload,\n                    timeout=30\n                )\n                response.raise_for_status()\n                \n                embedding = response.json()[\"embedding\"]\n                embeddings.append(embedding)\n                \n            except requests.exceptions.RequestException as e:\n                print(f\"❌ Ошибка получения эмбеддинга: {e}\")\n                # Возвращаем случайный вектор как fallback\n                embeddings.append(np.random.rand(256).tolist())\n        \n        return embeddings\n    \n    def split_documents(self, docs: List[str], chunk_size: int = \\${chunkSize}) -> List[str]:\n        \"\"\"\n        Разбиение документов на чанки\n        \n        Args:\n            docs: Список документов\n            chunk_size: Размер чанка в словах\n            \n        Returns:\n            Список чанков\n        \"\"\"\n        chunks = []\n        for doc in docs:\n            words = doc.split()\n            for i in range(0, len(words), chunk_size):\n                chunk = \" \".join(words[i:i + chunk_size])\n                if chunk.strip():  # Избегаем пустых чанков\n                    chunks.append(chunk)\n        \n        print(f\"📄 Создано {len(chunks)} чанков из {len(docs)} документов\")\n        return chunks\n    \n    def add_documents(self, docs: List[str]) -> None:\n        \"\"\"\n        Добавление документов в векторную базу\n        \n        Args:\n            docs: Список текстов документов\n        \"\"\"\n        print(f\"🔄 Обработка {len(docs)} документов...\")\n        \n        # Разбиение на чанки\n        chunks = self.split_documents(docs)\n        \n        # Получение эмбеддингов\n        embeddings = self.get_embeddings(chunks)\n        \n        # Сохранение в векторную БД\n        for i, (chunk, embedding) in enumerate(zip(chunks, embeddings)):\n            self.documents.append({\n                \"id\": i,\n                \"text\": chunk,\n                \"embedding\": np.array(embedding)\n            })\n        \n        print(f\"✅ Добавлено {len(chunks)} чанков в векторную базу\")\n    \n    def search(self, query: str, top_k: int = \\${topK}) -> List[Dict]:\n        \"\"\"\n        Семантический поиск по запросу\n        \n        Args:\n            query: Поисковый запрос\n            top_k: Количество результатов\n            \n        Returns:\n            Список наиболее релевантных документов\n        \"\"\"\n        if not self.documents:\n            print(\"⚠️ Векторная база пустая!\")\n            return []\n        \n        print(f\"🔍 Поиск по запросу: '{query}'\")\n        \n        # Получение эмбеддинга запроса\n        query_embeddings = self.get_embeddings([query])\n        query_vector = np.array(query_embeddings[0])\n        \n        # Вычисление сходства\n        similarities = []\n        for doc in self.documents:\n            similarity = np.dot(query_vector, doc[\"embedding\"]) / (\n                np.linalg.norm(query_vector) * np.linalg.norm(doc[\"embedding\"])\n            )\n            similarities.append({\n                \"document\": doc,\n                \"similarity\": float(similarity)\n            })\n        \n        # Сортировка по убыванию сходства\n        similarities.sort(key=lambda x: x[\"similarity\"], reverse=True)\n        \n        results = similarities[:top_k]\n        print(f\"📊 Найдено {len(results)} релевантных документов\")\n        \n        return results\n    \n    def generate_answer(self, query: str, context_docs: List[Dict]) -> str:\n        \"\"\"\n        Генерация ответа на основе найденного контекста\n        \n        Args:\n            query: Вопрос пользователя\n            context_docs: Найденные документы\n            \n        Returns:\n            Сгенерированный ответ\n        \"\"\"\n        # Формирование контекста\n        context_texts = []\n        for i, doc_info in enumerate(context_docs, 1):\n            doc = doc_info[\"document\"]\n            similarity = doc_info[\"similarity\"]\n            context_texts.append(f\"Документ {i} (релевантность: {similarity:.3f}):\\\\n{doc['text']}\")\n        \n        context = \"\\\\n\\\\n\".join(context_texts)\n        \n        # Создание промпта\n        messages = [\n            {\n                \"role\": \"system\",\n                \"content\": \"Ты - помощник по поиску информации. Отвечай на вопросы пользователя, используя только предоставленный контекст. Если в контексте нет ответа, честно скажи об этом.\"\n            },\n            {\n                \"role\": \"user\",\n                \"content\": f\"\"\"Контекст:\n{context}\n\nВопрос: {query}\n\nОтветь на вопрос, основываясь только на предоставленном контексте:\"\"\"\n            }\n        ]\n        \n        try:\n            print(\"🤖 Генерация ответа...\")\n            response = self.client.chat.completions.create(\n                model=self.generation_model,\n                messages=messages,\n                max_tokens=1500,\n                temperature=0.2\n            )\n            \n            answer = response.choices[0].message.content\n            return answer\n            \n        except Exception as e:\n            error_msg = f\"❌ Ошибка генерации ответа: {e}\"\n            print(error_msg)\n            return error_msg\n    \n    def ask(self, query: str) -> Dict:\n        \"\"\"\n        Полный RAG запрос: поиск + генерация\n        \n        Args:\n            query: Вопрос пользователя\n            \n        Returns:\n            Результат с ответом и метаданными\n        \"\"\"\n        # Поиск релевантных документов\n        search_results = self.search(query)\n        \n        if not search_results:\n            return {\n                \"answer\": \"Извините, не удалось найти релевантные документы.\",\n                \"sources\": [],\n                \"query\": query\n            }\n        \n        # Генерация ответа\n        answer = self.generate_answer(query, search_results)\n        \n        # Формирование источников\n        sources = []\n        for result in search_results:\n            doc = result[\"document\"]\n            sources.append({\n                \"text\": doc[\"text\"][:200] + \"...\" if len(doc[\"text\"]) > 200 else doc[\"text\"],\n                \"similarity\": result[\"similarity\"],\n                \"id\": doc[\"id\"]\n            })\n        \n        return {\n            \"answer\": answer,\n            \"sources\": sources,\n            \"query\": query,\n            \"model\": \"\\${model}\"\n        }\n\n# Пример использования\ndef demo_yandex_rag():\n    \"\"\"Демонстрация работы YandexRAG\"\"\"\n    \n    # Инициализация\n    rag = YandexRAG()\n    \n    # Тестовые документы\n    documents = [\n        \"Yandex Foundation Models - это семейство больших языковых моделей от Яндекса для различных задач обработки естественного языка.\",\n        \"YandexGPT Pro поддерживает контекст до 32000 токенов и обеспечивает высокое качество генерации на русском и английском языках.\",\n        \"RAG (Retrieval-Augmented Generation) позволяет языковым моделям использовать внешние источники знаний для генерации более точных ответов.\",\n        \"Векторные эмбеддинги преобразуют текст в числовые векторы, что позволяет выполнять семантический поиск по документам.\",\n        \"Семантический поиск находит документы не по ключевым словам, а по смыслу и контексту запроса.\"\n    ]\n    \n    # Добавление документов\n    rag.add_documents(documents)\n    \n    # Тестовые запросы\n    queries = [\n        \"Что такое YandexGPT Pro?\",\n        \"Как работает RAG?\",\n        \"Что такое семантический поиск?\"\n    ]\n    \n    print(\"\\\\n\" + \"=\"*80)\n    print(\"🎯 ДЕМОНСТРАЦИЯ YANDEX RAG СИСТЕМЫ\")\n    print(\"=\"*80)\n    \n    for query in queries:\n        print(f\"\\\\n❓ Запрос: {query}\")\n        print(\"-\" * 60)\n        \n        result = rag.ask(query)\n        \n        print(f\"🤖 Ответ: {result['answer']}\")\n        print(f\"\\\\n📚 Источники ({len(result['sources'])}):\")\n        \n        for i, source in enumerate(result['sources'], 1):\n            print(f\"   {i}. Сходство: {source['similarity']:.3f}\")\n            print(f\"      {source['text']}\")\n        \n        print(\"\\\\n\" + \"-\" * 60)\n\nif __name__ == \"__main__\":\n    # Запуск демонстрации\n    demo_yandex_rag()\n\\`;\n            }\n\n            function generateSDKCode(model, topK, chunkSize, folderId) {\n                return \\`\"\"\"\nRAG система с Yandex Foundation Models через официальный SDK\nАвтоматически сгенерированный код для интеграции\n\"\"\"\n\nimport os\nimport numpy as np\nfrom typing import List, Dict\nfrom yandexcloud import SDK\nfrom yandex.cloud.ai.foundation_models.v1 import embedding_service_pb2_grpc\nfrom yandex.cloud.ai.foundation_models.v1 import embedding_service_pb2\nfrom yandex.cloud.ai.foundation_models.v1 import text_generation_service_pb2_grpc\nfrom yandex.cloud.ai.foundation_models.v1 import text_generation_service_pb2\n\nclass YandexRAGSDK:\n    \"\"\"\n    RAG система с использованием Yandex Foundation Models SDK\n    \"\"\"\n    \n    def __init__(self):\n        \"\"\"Инициализация RAG системы через SDK\"\"\"\n        \n        # Получение токена авторизации\n        iam_token = os.getenv(\"YANDEX_CLOUD_IAM_TOKEN\")\n        api_key = os.getenv(\"YANDEX_CLOUD_API_KEY\")\n        \n        if not (iam_token or api_key):\n            raise ValueError(\"Установите YANDEX_CLOUD_IAM_TOKEN или YANDEX_CLOUD_API_KEY\")\n        \n        # Инициализация SDK\n        if iam_token:\n            self.sdk = SDK(token=iam_token)\n        else:\n            # Для API ключа нужен сервисный аккаунт\n            self.sdk = SDK(service_account_key=api_key)\n        \n        self.folder_id = \"\\${folderId}\"\n        self.embedding_model = f\"emb://\\${folderId}/text-search-doc/latest\"\n        self.generation_model = f\"gpt://\\${folderId}/\\${model}/latest\"\n        self.documents = []\n        \n        print(f\"✅ YandexRAG SDK инициализирован с моделью: \\${model}\")\n    \n    def get_embeddings(self, texts: List[str]) -> List[List[float]]:\n        \"\"\"\n        Получение эмбеддингов через Yandex Foundation Models SDK\n        \n        Args:\n            texts: Список текстов для векторизации\n            \n        Returns:\n            Список векторов эмбеддингов\n        \"\"\"\n        service = self.sdk.client(embedding_service_pb2_grpc.EmbeddingsServiceStub)\n        embeddings = []\n        \n        for text in texts:\n            try:\n                request = embedding_service_pb2.TextEmbeddingRequest(\n                    model_uri=self.embedding_model,\n                    text=text\n                )\n                \n                response = service.TextEmbedding(request)\n                embeddings.append(list(response.embedding))\n                \n            except Exception as e:\n                print(f\"❌ Ошибка получения эмбеддинга: {e}\")\n                # Fallback на случайный вектор\n                embeddings.append(np.random.rand(256).tolist())\n        \n        return embeddings\n    \n    def split_documents(self, docs: List[str], chunk_size: int = \\${chunkSize}) -> List[str]:\n        \"\"\"\n        Разбиение документов на чанки\n        \n        Args:\n            docs: Список документов\n            chunk_size: Размер чанка в словах\n            \n        Returns:\n            Список чанков\n        \"\"\"\n        chunks = []\n        for doc in docs:\n            words = doc.split()\n            for i in range(0, len(words), chunk_size):\n                chunk = \" \".join(words[i:i + chunk_size])\n                if chunk.strip():\n                    chunks.append(chunk)\n        \n        print(f\"📄 Создано {len(chunks)} чанков из {len(docs)} документов\")\n        return chunks\n    \n    def add_documents(self, docs: List[str]) -> None:\n        \"\"\"\n        Добавление документов в векторную базу\n        \n        Args:\n            docs: Список текстов документов\n        \"\"\"\n        print(f\"🔄 Обработка {len(docs)} документов...\")\n        \n        # Разбиение на чанки\n        chunks = self.split_documents(docs)\n        \n        # Получение эмбеддингов\n        embeddings = self.get_embeddings(chunks)\n        \n        # Сохранение в векторную БД\n        for i, (chunk, embedding) in enumerate(zip(chunks, embeddings)):\n            self.documents.append({\n                \"id\": i,\n                \"text\": chunk,\n                \"embedding\": np.array(embedding)\n            })\n        \n        print(f\"✅ Добавлено {len(chunks)} чанков в векторную базу\")\n    \n    def search(self, query: str, top_k: int = \\${topK}) -> List[Dict]:\n        \"\"\"\n        Семантический поиск по запросу\n        \n        Args:\n            query: Поисковый запрос\n            top_k: Количество результатов\n            \n        Returns:\n            Список наиболее релевантных документов\n        \"\"\"\n        if not self.documents:\n            print(\"⚠️ Векторная база пустая!\")\n            return []\n        \n        print(f\"🔍 Поиск по запросу: '{query}'\")\n        \n        # Получение эмбеддинга запроса\n        query_embeddings = self.get_embeddings([query])\n        query_vector = np.array(query_embeddings[0])\n        \n        # Вычисление сходства\n        similarities = []\n        for doc in self.documents:\n            similarity = np.dot(query_vector, doc[\"embedding\"]) / (\n                np.linalg.norm(query_vector) * np.linalg.norm(doc[\"embedding\"])\n            )\n            similarities.append({\n                \"document\": doc,\n                \"similarity\": float(similarity)\n            })\n        \n        # Сортировка по убыванию сходства\n        similarities.sort(key=lambda x: x[\"similarity\"], reverse=True)\n        \n        results = similarities[:top_k]\n        print(f\"📊 Найдено {len(results)} релевантных документов\")\n        \n        return results\n    \n    def generate_answer(self, query: str, context_docs: List[Dict]) -> str:\n        \"\"\"\n        Генерация ответа через YandexGPT SDK\n        \n        Args:\n            query: Вопрос пользователя\n            context_docs: Найденные документы\n            \n        Returns:\n            Сгенерированный ответ\n        \"\"\"\n        # Формирование контекста\n        context_texts = []\n        for i, doc_info in enumerate(context_docs, 1):\n            doc = doc_info[\"document\"]\n            similarity = doc_info[\"similarity\"]\n            context_texts.append(f\"Документ {i} (релевантность: {similarity:.3f}):\\\\n{doc['text']}\")\n        \n        context = \"\\\\n\\\\n\".join(context_texts)\n        \n        # Создание промпта\n        prompt = f\"\"\"Используя следующий контекст, ответь на вопрос пользователя:\n\nКОНТЕКСТ:\n{context}\n\nВОПРОС: {query}\n\nОТВЕТ:\"\"\"\n        \n        try:\n            print(\"🤖 Генерация ответа через SDK...\")\n            \n            service = self.sdk.client(text_generation_service_pb2_grpc.TextGenerationServiceStub)\n            \n            request = text_generation_service_pb2.CompletionRequest(\n                model_uri=self.generation_model,\n                completion_options=text_generation_service_pb2.CompletionOptions(\n                    stream=False,\n                    temperature=0.2,\n                    max_tokens=1500\n                ),\n                messages=[\n                    text_generation_service_pb2.Message(\n                        role=\"user\",\n                        text=prompt\n                    )\n                ]\n            )\n            \n            response = service.Completion(request)\n            answer = response.result.alternatives[0].message.text\n            \n            return answer\n            \n        except Exception as e:\n            error_msg = f\"❌ Ошибка генерации через SDK: {e}\"\n            print(error_msg)\n            return error_msg\n    \n    def ask(self, query: str) -> Dict:\n        \"\"\"\n        Полный RAG запрос через SDK\n        \n        Args:\n            query: Вопрос пользователя\n            \n        Returns:\n            Результат с ответом и метаданными\n        \"\"\"\n        # Поиск релевантных документов\n        search_results = self.search(query)\n        \n        if not search_results:\n            return {\n                \"answer\": \"Извините, не удалось найти релевантные документы.\",\n                \"sources\": [],\n                \"query\": query\n            }\n        \n        # Генерация ответа\n        answer = self.generate_answer(query, search_results)\n        \n        # Формирование источников\n        sources = []\n        for result in search_results:\n            doc = result[\"document\"]\n            sources.append({\n                \"text\": doc[\"text\"][:200] + \"...\" if len(doc[\"text\"]) > 200 else doc[\"text\"],\n                \"similarity\": result[\"similarity\"],\n                \"id\": doc[\"id\"]\n            })\n        \n        return {\n            \"answer\": answer,\n            \"sources\": sources,\n            \"query\": query,\n            \"model\": \"\\${model}\",\n            \"api\": \"Yandex Cloud SDK\"\n        }\n\n# Пример использования\ndef demo_yandex_rag_sdk():\n    \"\"\"Демонстрация работы YandexRAG через SDK\"\"\"\n    \n    # Инициализация\n    rag = YandexRAGSDK()\n    \n    # Тестовые документы\n    documents = [\n        \"Yandex Foundation Models обеспечивает высокое качество понимания и генерации текста на русском языке.\",\n        \"SDK позволяет использовать все возможности Yandex Cloud AI платформы с максимальной производительностью.\",\n        \"Векторные эмбеддинги размерностью 256 оптимизированы для семантического поиска по русским текстам.\",\n        \"Интеграция через SDK обеспечивает лучшую производительность и стабильность по сравнению с REST API.\"\n    ]\n    \n    # Добавление документов\n    rag.add_documents(documents)\n    \n    # Тестовые запросы\n    queries = [\n        \"Какие преимущества у SDK?\",\n        \"Какой размер эмбеддингов?\",\n        \"Для каких языков оптимизированы модели?\"\n    ]\n    \n    print(\"\\\\n\" + \"=\"*80)\n    print(\"🎯 ДЕМОНСТРАЦИЯ YANDEX RAG SDK\")\n    print(\"=\"*80)\n    \n    for query in queries:\n        print(f\"\\\\n❓ Запрос: {query}\")\n        print(\"-\" * 60)\n        \n        result = rag.ask(query)\n        \n        print(f\"🤖 Ответ: {result['answer']}\")\n        print(f\"\\\\n📚 Источники ({len(result['sources'])}):\")\n        \n        for i, source in enumerate(result['sources'], 1):\n            print(f\"   {i}. Сходство: {source['similarity']:.3f}\")\n            print(f\"      {source['text']}\")\n\nif __name__ == \"__main__\":\n    # Запуск демонстрации\n    demo_yandex_rag_sdk()\n\\`;\n            }\n\n            // New functions for enhanced configurator\n            function switchYandexTab(tabName) {\n                // Remove active from all tabs and contents\n                document.querySelectorAll('#yandex-config-tabs .tab').forEach(t => t.classList.remove('active'));\n                document.querySelectorAll('#yandex-config, #yandex-code, #yandex-sandbox').forEach(content => content.classList.remove('active'));\n                \n                // Add active to selected tab and content\n                document.querySelector(\\`[data-tab=\"\\${tabName}\"]\\`).classList.add('active');\n                document.getElementById(tabName).classList.add('active');\n            }\n\n            function copyGeneratedCode() {\n                const codeEditor = document.getElementById('yandex-generated-code-editor');\n                if (codeEditor && codeEditor.value) {\n                    RAGSeminar.copyToClipboard(codeEditor.value);\n                } else {\n                    RAGSeminar.showNotification('Сначала сгенерируйте код!', 'warning');\n                }\n            }\n\n            function downloadGeneratedCode() {\n                const codeEditor = document.getElementById('yandex-generated-code-editor');\n                if (codeEditor && codeEditor.value) {\n                    const model = document.getElementById('yandex-model-select').value;\n                    const apiType = document.getElementById('api-approach-select').value;\n                    const filename = \\`yandex_rag_\\${apiType}_\\${model.replace('-', '_')}.py\\`;\n                    RAGSeminar.downloadCode(codeEditor.value, filename);\n                } else {\n                    RAGSeminar.showNotification('Сначала сгенерируйте код!', 'warning');\n                }\n            }\n\n            function sendCodeToSandbox() {\n                const codeEditor = document.getElementById('yandex-generated-code-editor');\n                const sandboxEditor = document.getElementById('yandex-sandbox-code');\n                \n                if (codeEditor && codeEditor.value && sandboxEditor) {\n                    sandboxEditor.value = codeEditor.value;\n                    switchYandexTab('yandex-sandbox');\n                    RAGSeminar.showNotification('Код отправлен в песочницу!', 'success');\n                } else {\n                    RAGSeminar.showNotification('Сначала сгенерируйте код!', 'warning');\n                }\n            }\n\n            function loadCodeFromEditor() {\n                const codeEditor = document.getElementById('yandex-generated-code-editor');\n                const sandboxEditor = document.getElementById('yandex-sandbox-code');\n                \n                if (codeEditor && codeEditor.value && sandboxEditor) {\n                    sandboxEditor.value = codeEditor.value;\n                    RAGSeminar.showNotification('Код загружен из редактора!', 'info');\n                } else {\n                    RAGSeminar.showNotification('Код в редакторе отсутствует!', 'warning');\n                }\n            }\n\n            async function runYandexSandboxCode() {\n                const sandboxCode = document.getElementById('yandex-sandbox-code').value;\n                const outputElement = document.getElementById('yandex-sandbox-output');\n                \n                if (!sandboxCode.trim()) {\n                    RAGSeminar.showNotification('Добавьте код для выполнения!', 'warning');\n                    return;\n                }\n\n                await RAGSeminar.runPythonCode(sandboxCode, 'yandex-sandbox-output');\n                RAGSeminar.updateProgress(95);\n            }\n\n            function clearSandboxOutput() {\n                const outputElement = document.getElementById('yandex-sandbox-output');\n                if (outputElement) {\n                    outputElement.innerHTML = 'Выполните код для просмотра результатов...';\n                }\n                RAGSeminar.showNotification('Вывод песочницы очищен', 'info');\n            }\n\n            // Initialize Yandex configurator tabs\n            function initYandexConfigTabs() {\n                document.querySelectorAll('#yandex-config-tabs .tab').forEach(tab => {\n                    tab.addEventListener('click', () => {\n                        const targetTab = tab.getAttribute('data-tab');\n                        switchYandexTab(targetTab);\n                    });\n                });\n            }\n            \n            // Get full seminar notes\n            function getFullSeminarNotes() {\n                return \\`RAG (Retrieval-Augmented Generation) - Конспект семинара\n\n=== ОСНОВНЫЕ КОНЦЕПЦИИ ===\n- RAG объединяет поиск информации с генерацией текста\n- Решает проблему галлюцинаций LLM\n- Состоит из Retriever + Generator компонентов\n\n=== АРХИТЕКТУРА ===\n1. Индексация: документы → чанки → эмбеддинги → векторная БД\n2. Поиск и генерация: запрос → поиск → контекст → LLM → ответ\n\n=== АЛГОРИТМЫ ПОИСКА ===\n- HNSW: лучшая производительность на CPU\n- FAISS: сжатие векторов, GPU поддержка  \n- Annoy: простота реализации\n\n=== МЕТРИКИ ===\n- Recall@k: доля найденных релевантных документов\n- Precision@k: точность среди топ-k\n- Faithfulness: отсутствие галлюцинаций\n\n=== YANDEX FOUNDATION MODELS ===\n- YandexGPT Pro: 32K контекст, высокое качество\n- YandexGPT: 8K контекст, сбалансированность\n- YandexGPT Lite: 4K контекст, высокая скорость\n\n=== ПРАКТИЧЕСКИЕ СОВЕТЫ ===\n- Выбирайте размер чанков в зависимости от задачи\n- Настраивайте top-k для оптимального контекста\n- Используйте метрики для оценки качества\n- Экспериментируйте с разными моделями эмбеддингов\\`;\n            }\n            \n            // Initialize everything when DOM is loaded\n            document.addEventListener('DOMContentLoaded', function() {\n                console.log('🎯 Инициализация интерактивных элементов...');\n                \n                // Initialize tabs\n                RAGSeminar.initTabs('theory-tabs');\n                \n                // Initialize quiz\n                RAGSeminar.initQuiz('rag-quiz');\n                \n                // Initialize visualization\n                setTimeout(initializeVisualization, 500);\n                \n                console.log('✅ Все интерактивные элементы инициализированы');\n            });\n        </script>\n    </body>\n    </html>\n  `)\n})\n\n// Enhanced Vector Databases Guide routes\n// Both routes serve the same detailed content\napp.get('/vector_databases_enhanced_guide', (c) => {\n  return c.html(`<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    \n    <!-- SEO Meta Tags -->\n    <title>📚 Полное руководство по векторным базам данных | FAISS, HNSW, Annoy - Студентам 2024-2025</title>\n    <meta name=\"description\" content=\"Исчерпывающее руководство по векторным БД: FAISS, HNSW, Annoy. Хронология 2013-2025, проверенные факты, бенчмарки SIFT1M, параметры настройки. Для студентов и разработчиов.\">\n    <meta name=\"keywords\" content=\"векторные базы данных, FAISS, HNSW, Annoy, ANN поиск, эмбеддинги, машинное обучение, Meta, Spotify, NVIDIA cuVS\">\n    \n    <!-- External Libraries -->\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <link href=\"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    \n    <style>\n        .gradient-bg {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n        .section-padding {\n            padding: 4rem 1rem;\n        }\n        .card-shadow {\n            box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n        }\n        .code-block {\n            background: #1a202c;\n            color: #e2e8f0;\n            border-radius: 8px;\n            padding: 16px;\n            font-family: 'Courier New', monospace;\n            font-size: 14px;\n            line-height: 1.4;\n            overflow-x: auto;\n        }\n        .timeline-item {\n            position: relative;\n            padding-left: 2rem;\n            margin-bottom: 2rem;\n        }\n        .timeline-item::before {\n            content: '';\n            position: absolute;\n            left: 0;\n            top: 0.5rem;\n            width: 1rem;\n            height: 1rem;\n            background: #4f46e5;\n            border-radius: 50%;\n        }\n        .benchmark-table {\n            overflow-x: auto;\n        }\n        .fact-box {\n            border-left: 4px solid #10b981;\n            background: #f0fdf4;\n            padding: 1rem;\n            margin: 1rem 0;\n        }\n        .warning-box {\n            border-left: 4px solid #f59e0b;\n            background: #fffbeb;\n            padding: 1rem;\n            margin: 1rem 0;\n        }\n        .error-box {\n            border-left: 4px solid #ef4444;\n            background: #fef2f2;\n            padding: 1rem;\n            margin: 1rem 0;\n        }\n        .nav-sticky {\n            position: sticky;\n            top: 20px;\n        }\n    </style>\n</head>\n<body class=\"bg-gray-50\">\n    <!-- Header -->\n    <header class=\"gradient-bg text-white\">\n        <div class=\"container mx-auto px-4 py-8\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                    <i class=\"fas fa-database text-4xl mr-4\"></i>\n                    <div>\n                        <h1 class=\"text-4xl font-bold\">Векторные базы данных</h1>\n                        <p class=\"text-xl opacity-90\">Полное руководство для студентов | 2024-2025</p>\n                    </div>\n                </div>\n                <div class=\"hidden md:flex space-x-4\">\n                    <a href=\"/\" class=\"bg-white bg-opacity-20 px-4 py-2 rounded-lg hover:bg-opacity-30 transition-colors\">\n                        <i class=\"fas fa-home mr-2\"></i>Главная\n                    </a>\n                    <a href=\"/vector_databases_guide.html\" class=\"bg-white bg-opacity-20 px-4 py-2 rounded-lg hover:bg-opacity-30 transition-colors\">\n                        <i class=\"fas fa-book mr-2\"></i>Основное руководство\n                    </a>\n                </div>\n            </div>\n        </div>\n    </header>\n\n    <!-- Main Content -->\n    <div class=\"container mx-auto px-4 py-8\">\n        <div class=\"grid lg:grid-cols-4 gap-8\">\n            <!-- Navigation Sidebar -->\n            <div class=\"lg:col-span-1\">\n                <nav class=\"nav-sticky bg-white rounded-xl p-6 card-shadow\">\n                    <h3 class=\"font-bold text-lg mb-4\">📋 Содержание</h3>\n                    <ul class=\"space-y-2 text-sm\">\n                        <li><a href=\"#timeline\" class=\"text-blue-600 hover:text-blue-800 block py-1\">🕐 Хронология развития</a></li>\n                        <li><a href=\"#what-is\" class=\"text-blue-600 hover:text-blue-800 block py-1\">🔍 Что такое векторный поиск</a></li>\n                        <li><a href=\"#approaches\" class=\"text-blue-600 hover:text-blue-800 block py-1\">⚙️ Три подхода</a></li>\n                        <li><a href=\"#faiss\" class=\"text-blue-600 hover:text-blue-800 block py-1 pl-4\">🔧 FAISS</a></li>\n                        <li><a href=\"#hnsw\" class=\"text-blue-600 hover:text-blue-800 block py-1 pl-4\">🕸️ HNSW</a></li>\n                        <li><a href=\"#annoy\" class=\"text-blue-600 hover:text-blue-800 block py-1 pl-4\">🌳 Annoy</a></li>\n                        <li><a href=\"#comparison\" class=\"text-blue-600 hover:text-blue-800 block py-1\">📊 Сравнение</a></li>\n                        <li><a href=\"#code-examples\" class=\"text-blue-600 hover:text-blue-800 block py-1\">💻 Примеры кода</a></li>\n                        <li><a href=\"#sources\" class=\"text-blue-600 hover:text-blue-800 block py-1\">📚 Источники</a></li>\n                        <li><a href=\"#practical-tips\" class=\"text-blue-600 hover:text-blue-800 block py-1\">🎯 Практические советы</a></li>\n                    </ul>\n                </nav>\n            </div>\n\n            <!-- Content -->\n            <div class=\"lg:col-span-3 space-y-8\">\n                \n                <!-- Timeline -->\n                <section id=\"timeline\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-history mr-3 text-blue-600\"></i>\n                        🕐 Хронология развития технологий\n                    </h2>\n                    \n                    <div class=\"space-y-4\">\n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2013</span>\n                                    <span class=\"text-blue-600 font-medium\">Spotify</span>\n                                </div>\n                                <p>Spotify выпускает <strong>Annoy</strong> (первая популярная ANN библиотека)</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2016</span>\n                                    <span class=\"text-green-600 font-medium\">Академия</span>\n                                </div>\n                                <p>Публикация алгоритма <strong>HNSW</strong> (Malkov & Yashunin, arXiv:1603.09320)</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2017</span>\n                                    <span class=\"text-purple-600 font-medium\">Meta FAIR</span>\n                                </div>\n                                <p>Meta FAIR выпускает <strong>FAISS</strong> с GPU поддержкой</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2018</span>\n                                    <span class=\"text-blue-600 font-medium\">Spotify</span>\n                                </div>\n                                <p>Spotify начинает эксперименты с <strong>hnswlib</strong></p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2023</span>\n                                    <span class=\"text-blue-600 font-medium\">Spotify</span>\n                                </div>\n                                <p>Spotify анонсирует <strong>Voyager</strong> (замена Annoy на HNSW)</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-gray-50 p-4 rounded-lg\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg\">2024</span>\n                                    <span class=\"text-green-600 font-medium\">NVIDIA + Meta</span>\n                                </div>\n                                <p><strong>FAISS 1.10</strong> интегрирует NVIDIA cuVS для ускорения</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"timeline-item\">\n                            <div class=\"bg-blue-50 p-4 rounded-lg border-2 border-blue-200\">\n                                <div class=\"flex justify-between items-center mb-2\">\n                                    <span class=\"font-bold text-lg text-blue-700\">2025</span>\n                                    <span class=\"text-blue-600 font-medium\">Meta Engineering</span>\n                                </div>\n                                <p><strong>Meta публикует данные о ×8.1 ускорении с cuVS</strong></p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <!-- What is Vector Search -->\n                <section id=\"what-is\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-search mr-3 text-green-600\"></i>\n                        🔍 Что такое векторный поиск\n                    </h2>\n                    \n                    <div class=\"prose max-w-none\">\n                        <p class=\"text-lg leading-relaxed mb-6\">\n                            Представьте, что у вас есть библиотека с миллионом книг, но каталог построен не по алфавиту, \n                            а по \"смыслу\" - похожие по содержанию книги стоят рядом. Векторный поиск работает похожим образом.\n                        </p>\n\n                        <h3 class=\"text-2xl font-semibold mb-4\">🚀 Современные применения (2024-2025):</h3>\n                        <div class=\"grid md:grid-cols-2 gap-4 mb-6\">\n                            <div class=\"bg-blue-50 p-4 rounded-lg\">\n                                <h4 class=\"font-semibold text-blue-700\">ChatGPT и Claude</h4>\n                                <p>поиск релевантной информации в базе знаний</p>\n                            </div>\n                            <div class=\"bg-green-50 p-4 rounded-lg\">\n                                <h4 class=\"font-semibold text-green-700\">Spotify/Apple Music</h4>\n                                <p>рекомендации похожих треков</p>\n                            </div>\n                            <div class=\"bg-purple-50 p-4 rounded-lg\">\n                                <h4 class=\"font-semibold text-purple-700\">Google/Яндекс</h4>\n                                <p>поиск похожих изображений</p>\n                            </div>\n                            <div class=\"bg-orange-50 p-4 rounded-lg\">\n                                <h4 class=\"font-semibold text-orange-700\">E-commerce</h4>\n                                <p>\"товары, похожие на этот\"</p>\n                            </div>\n                        </div>\n\n                        <div class=\"fact-box\">\n                            <strong>📊 Проверенный факт:</strong> По данным исследований 2024 года, рынок векторных баз данных \n                            вырос на 300%+ за последние 2 года благодаря буму LLM-приложений.\n                        </div>\n                    </div>\n                </section>\n\n                <!-- Three Approaches -->\n                <section id=\"approaches\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-cogs mr-3 text-purple-600\"></i>\n                        ⚙️ Три подхода к решению задачи\n                    </h2>\n                    \n                    <!-- FAISS -->\n                    <div id=\"faiss\" class=\"mb-10\">\n                        <h3 class=\"text-2xl font-bold mb-4\">🔧 FAISS: \"Швейцарский нож\" (Meta, 2017-2025)</h3>\n                        \n                        <p class=\"text-lg mb-4\">\n                            <strong>Суть простыми словами:</strong> Как большой ящик с инструментами - есть молоток для одних задач, \n                            отвертка для других. FAISS предлагает разные \"инструменты\" для разных случаев.\n                        </p>\n\n                        <div class=\"fact-box\">\n                            <strong>📈 Проверенный факт (май 2025):</strong> FAISS + NVIDIA cuVS показал ускорение до ×8.1 \n                            по latency для IVFPQ на датасете 5M×1536 при тестировании на NVIDIA H100 vs Intel Xeon Platinum 8480CL<br>\n                            <em>Источник: <a href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\" class=\"text-blue-600\">Meta Engineering Blog</a></em>\n                        </div>\n\n                        <h4 class=\"text-xl font-semibold mb-3\">📊 Рекомендуемые параметры:</h4>\n                        <div class=\"code-block mb-4\">\n• IVF: nlist = 100-100,000 (количество кластеров)\n• IVFPQ: m = 8-64 субвекторов, code_size = 4-8 бит\n• HNSW: M = 16-64, efConstruction = 100-500\n• GPU: батчи 100+ запросов для оптимальной производительности\n                        </div>\n                    </div>\n\n                    <!-- HNSW -->\n                    <div id=\"hnsw\" class=\"mb-10\">\n                        <h3 class=\"text-2xl font-bold mb-4\">🕸️ HNSW: \"Умная навигация по графу\" (2016)</h3>\n                        \n                        <p class=\"text-lg mb-4\">\n                            <strong>Суть простыми словами:</strong> Как GPS-навигатор с разными \"слоями\" дорог - сначала едем по \n                            автостраде (верхние слои), потом по городским улицам (нижние слои).\n                        </p>\n\n                        <div class=\"fact-box\">\n                            <strong>🎯 Проверенный факт:</strong> Алгоритм достигает логарифмической сложности O(log n) для поиска \n                            и построения, что подтверждено оригинальной статьей и множественными практическими тестами.<br>\n                            <em>Источник: <a href=\"https://arxiv.org/pdf/1603.09320\" class=\"text-blue-600\">Malkov & Yashunin, 2016</a></em>\n                        </div>\n\n                        <h4 class=\"text-xl font-semibold mb-3\">📈 Конкретные бенчмарки SIFT1M</h4>\n                        <p class=\"text-sm text-gray-600 mb-2\">(Intel Xeon E5-2680 v2, 20 потоков, 2018):</p>\n                        <div class=\"code-block mb-4\">\n• HNSW Flat (efSearch=32): 0.020 мс/запрос, R@1=94.9%\n• HNSW + SQ (efSearch=32):  0.008 мс/запрос, R@1=85.1%  \n• IVF Flat (nprobe=64):     0.141 мс/запрос, R@1=94.7%\n                        </div>\n                        <p class=\"text-sm text-gray-600 mb-4\">\n                            <em>Источник: <a href=\"https://github.com/facebookresearch/faiss/wiki/Indexing-1M-vectors\" class=\"text-blue-600\">FAISS Wiki - Indexing 1M vectors</a></em>\n                        </p>\n\n                        <h4 class=\"text-xl font-semibold mb-3\">📊 Настройка параметров:</h4>\n                        <div class=\"code-block mb-4\">\n• M = 16-32: для экономии памяти\n• M = 32-64: для высокой точности  \n• efConstruction = 100-200: баланс время/качество\n• efSearch = 50-500: настройка в runtime под SLA\n                        </div>\n                    </div>\n\n                    <!-- Annoy -->\n                    <div id=\"annoy\" class=\"mb-10\">\n                        <h3 class=\"text-2xl font-bold mb-4\">🌳 Annoy: \"Быстрые деревья решений\" (Spotify, 2013-2023)</h3>\n                        \n                        <p class=\"text-lg mb-4\">\n                            <strong>Суть простыми словами:</strong> Как игра \"20 вопросов\" - строим много деревьев с вопросами \n                            \"левее/правее этой линии?\" и находим ответ за несколько шагов.\n                        </p>\n\n                        <div class=\"warning-box\">\n                            <strong>📅 Историческая справка:</strong> В октябре 2023 Spotify анонсировал переход с Annoy на Voyager \n                            (на основе HNSW), заявив о ×10 ускорении скорости при той же точности.<br>\n                            <em>Источник: <a href=\"https://engineering.atspotify.com/introducing-voyager-spotifys-new-nearest-neighbor-search-library\" class=\"text-blue-600\">Spotify Engineering Blog</a></em>\n                        </div>\n\n                        <h4 class=\"text-xl font-semibold mb-3\">📊 Параметры настройки:</h4>\n                        <div class=\"code-block mb-4\">\n• n_trees = 10-50: для быстрого поиска\n• n_trees = 50-100: для высокой точности\n• search_k = n_trees × 100-1000: компромисс скорость/качество\n• Ограничения: int32 IDs, max(id)+1 аллокация памяти\n                        </div>\n                    </div>\n                </section>\n\n                <!-- Comparison -->\n                <section id=\"comparison\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-balance-scale mr-3 text-orange-600\"></i>\n                        📊 Практическое сравнение (обновлено 2024-2025)\n                    </h2>\n                    \n                    <h3 class=\"text-2xl font-semibold mb-4\">Когда использовать что:</h3>\n                    <div class=\"benchmark-table\">\n                        <table class=\"w-full border-collapse border border-gray-300 mb-6\">\n                            <thead>\n                                <tr class=\"bg-gray-50\">\n                                    <th class=\"border border-gray-300 p-3 text-left font-semibold\">Сценарий</th>\n                                    <th class=\"border border-gray-300 p-3 text-center font-semibold\">FAISS</th>\n                                    <th class=\"border border-gray-300 p-3 text-center font-semibold\">HNSW</th>\n                                    <th class=\"border border-gray-300 p-3 text-center font-semibold\">Annoy</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-3 font-medium\">Миллиарды векторов + GPU</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Лучший выбор</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-red-600\">❌ Только CPU</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-red-600\">❌ Устарел</td>\n                                </tr>\n                                <tr class=\"bg-gray-50\">\n                                    <td class=\"border border-gray-300 p-3 font-medium\">Высокая точность на CPU</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Хорош</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Идеален</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-yellow-600\">⚠️ Средне</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-3 font-medium\">Быстрый старт приложения</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-yellow-600\">⚠️ Медленнее</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-yellow-600\">⚠️ Средне</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Отлично</td>\n                                </tr>\n                                <tr class=\"bg-gray-50\">\n                                    <td class=\"border border-gray-300 p-3 font-medium\">Динамические обновления</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Да</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ Да</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-red-600\">❌ Только rebuild</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-3 font-medium\">Память критична</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ IVFPQ сжатие</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-yellow-600\">⚠️ Настройка M</td>\n                                    <td class=\"border border-gray-300 p-3 text-center text-green-600\">✅ mmap</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div class=\"warning-box\">\n                        <strong>⚠️ Практические ограничения (2024):</strong>\n                        <div class=\"code-block mt-2\">\n• FAISS GPU: k ≤ 2048, nprobe ≤ 2048, нужен батчинг\n• HNSW: память ~линейно растет с M, планируйте max_elements  \n• Annoy: полная иммутабельность после build(), int32 ID лимиты\n                        </div>\n                    </div>\n                </section>\n\n                <!-- Code Examples -->\n                <section id=\"code-examples\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-code mr-3 text-blue-600\"></i>\n                        💻 Обновленные примеры кода\n                    </h2>\n                    \n                    <h3 class=\"text-2xl font-semibold mb-4\">FAISS с современными возможностями (2024-2025)</h3>\n                    <div class=\"code-block mb-6\">\n# Актуально для FAISS 1.10+ с cuVS поддержкой\nimport faiss\nimport numpy as np\n\n# Параметры на основе проверенных рекомендаций  \nd, nb = 128, 1_000_000\ndata = np.random.randn(nb, d).astype('float32')\n\n# HNSW индекс (параметры из SIFT1M бенчмарков)\nM = 32              # диапазон 16-64\nef_construction = 200  # диапазон 100-500  \nef_search = 128       # настройка runtime 50-500\n\nindex = faiss.IndexHNSWFlat(d, M)\nindex.hnsw.efConstruction = ef_construction\nindex.add(data)\n\n# Поиск с настройкой точности\nindex.hnsw.efSearch = ef_search\nD, I = index.search(queries, k=10)\n\n# Сохранение (совместимо между версиями)\nfaiss.write_index(index, \"modern_hnsw.index\")\n                    </div>\n\n                    <h3 class=\"text-2xl font-semibold mb-4\">GPU ускорение (требует NVIDIA GPU + cuVS)</h3>\n                    <div class=\"code-block mb-6\">\n# Проверьте наличие cuVS: pip install faiss-gpu-cuvs\nif faiss.get_num_gpus() > 0:\n    # GPU IVFPQ для больших датасетов\n    quantizer = faiss.IndexFlatL2(d)\n    nlist = 4096  # диапазон 100-100000\n    m = 32        # диапазон 8-64  \n    nbits = 8     # обычно 4-8\n    \n    gpu_index = faiss.IndexIVFPQ(quantizer, d, nlist, m, nbits)\n    gpu_index = faiss.index_cpu_to_all_gpus(gpu_index)\n    \n    # Тренировка (критично для качества)\n    gpu_index.train(data[:100000])  # минимум 1000×nlist\n    gpu_index.add(data)\n    \n    gpu_index.nprobe = 64  # диапазон 1-2048\n                    </div>\n                </section>\n\n                <!-- Sources -->\n                <section id=\"sources\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-book-open mr-3 text-green-600\"></i>\n                        📚 Проверенные источники для углублённого изучения\n                    </h2>\n                    \n                    <div class=\"grid md:grid-cols-1 gap-6\">\n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-3\">🔬 Научные статьи (первоисточники):</h3>\n                            <ul class=\"space-y-2 mb-6\">\n                                <li>\n                                    <strong>HNSW:</strong> \n                                    <a href=\"https://arxiv.org/pdf/1603.09320\" class=\"text-blue-600 hover:text-blue-800\">\n                                        Malkov & Yashunin (2016)\n                                    </a> \n                                    - оригинальная статья с теоретическим обоснованием\n                                </li>\n                                <li>\n                                    <strong>FAISS:</strong> \n                                    <a href=\"https://arxiv.org/abs/1702.08734\" class=\"text-blue-600 hover:text-blue-800\">\n                                        Johnson et al. (2019)\n                                    </a> \n                                    - архитектура библиотеки\n                                </li>\n                            </ul>\n                        </div>\n                        \n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-3\">🏢 Официальные технические блоги:</h3>\n                            <ul class=\"space-y-2 mb-6\">\n                                <li>\n                                    <a href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\" class=\"text-blue-600 hover:text-blue-800\">\n                                        Meta Engineering\n                                    </a> \n                                    - FAISS + cuVS (май 2025)\n                                </li>\n                                <li>\n                                    <a href=\"https://engineering.atspotify.com/introducing-voyager-spotifys-new-nearest-neighbor-search-library\" class=\"text-blue-600 hover:text-blue-800\">\n                                        Spotify Engineering\n                                    </a> \n                                    - Voyager анонс (октябрь 2023)\n                                </li>\n                                <li>\n                                    <a href=\"https://developer.nvidia.com/blog/accelerating-vector-search-nvidia-cuvs-ivf-pq-deep-dive-part-1/\" class=\"text-blue-600 hover:text-blue-800\">\n                                        NVIDIA Developer\n                                    </a> \n                                    - cuVS подробности (2024)\n                                </li>\n                            </ul>\n                        </div>\n                        \n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-3\">🛠 Практические ресурсы (постоянно обновляемые):</h3>\n                            <ul class=\"space-y-2 mb-6\">\n                                <li>\n                                    <a href=\"https://github.com/facebookresearch/faiss/wiki\" class=\"text-blue-600 hover:text-blue-800\">\n                                        FAISS GitHub Wiki\n                                    </a> \n                                    - официальная документация\n                                </li>\n                                <li>\n                                    <a href=\"https://ann-benchmarks.com/\" class=\"text-blue-600 hover:text-blue-800\">\n                                        ANN-Benchmarks\n                                    </a> \n                                    - актуальные сравнения (обновляется регулярно)\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/nmslib/hnswlib\" class=\"text-blue-600 hover:text-blue-800\">\n                                        hnswlib README\n                                    </a> \n                                    - документация и примеры\n                                </li>\n                            </ul>\n                        </div>\n                        \n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-3\">📊 Бенчмарк-ресурсы:</h3>\n                            <ul class=\"space-y-2\">\n                                <li><strong>ANN-Benchmarks:</strong> интерактивные графики для всех датасетов</li>\n                                <li><strong>Последнее обновление:</strong> регулярно, проверяйте на сайте актуальные результаты</li>\n                                <li><strong>Включают:</strong> faiss-ivf, hnswlib, annoy, scann, pgvector и другие</li>\n                            </ul>\n                        </div>\n                    </div>\n                </section>\n\n                <!-- Practical Tips -->\n                <section id=\"practical-tips\" class=\"bg-white rounded-xl p-8 card-shadow\">\n                    <h2 class=\"text-3xl font-bold mb-6\">\n                        <i class=\"fas fa-lightbulb mr-3 text-yellow-600\"></i>\n                        🎯 Практические советы для ваших проектов\n                    </h2>\n                    \n                    <div class=\"grid md:grid-cols-2 gap-6\">\n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-4\">🚀 Быстрый старт (выбор за 30 секунд):</h3>\n                            <div class=\"code-block mb-4\">\n1. Учебный проект (&lt;100K векторов): hnswlib\n2. Продакшн на CPU (высокая точность): hnswlib  \n3. Продакшн с GPU (масштаб): FAISS IVFPQ\n4. Легаси система (простота): можно Annoy, но лучше hnswlib\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <h3 class=\"text-xl font-semibold mb-4\">⚠️ Типичные ошибки новичков:</h3>\n                            <ul class=\"space-y-2 text-sm\">\n                                <li><strong>FAISS:</strong> забыть train() для IVF индексов</li>\n                                <li><strong>HNSW:</strong> не планировать max_elements заранее</li>\n                                <li><strong>Annoy:</strong> ожидать онлайн-обновления после build()</li>\n                                <li><strong>Общее:</strong> не нормализовать векторы для cosine similarity</li>\n                            </ul>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n\n    <!-- Footer -->\n    <footer class=\"bg-gray-800 text-white py-8 mt-12\">\n        <div class=\"container mx-auto px-4 text-center\">\n            <p class=\"text-lg mb-2\">📅 <strong>Материал обновлен:</strong> декабрь 2024</p>\n            <p class=\"text-sm text-gray-400\">✅ Все факты проверены по первоисточникам</p>\n            <div class=\"mt-4\">\n                <a href=\"/\" class=\"text-blue-400 hover:text-blue-300 mr-4\">\n                    <i class=\"fas fa-home mr-2\"></i>Главная страница\n                </a>\n                <a href=\"/vector_databases_guide.html\" class=\"text-blue-400 hover:text-blue-300\">\n                    <i class=\"fas fa-book mr-2\"></i>Базовое руководство\n                </a>\n            </div>\n        </div>\n    </footer>\n\n    <!-- Scroll to Top Button -->\n    <button id=\"scrollToTop\" class=\"fixed bottom-6 right-6 bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition-colors opacity-0 invisible\">\n        <i class=\"fas fa-arrow-up\"></i>\n    </button>\n\n    <script>\n        // Smooth scrolling for navigation links\n        document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n            anchor.addEventListener('click', function (e) {\n                e.preventDefault();\n                const target = document.querySelector(this.getAttribute('href'));\n                if (target) {\n                    target.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'start'\n                    });\n                }\n            });\n        });\n\n        // Scroll to top button\n        const scrollToTopBtn = document.getElementById('scrollToTop');\n        \n        window.addEventListener('scroll', () => {\n            if (window.pageYOffset > 300) {\n                scrollToTopBtn.classList.remove('opacity-0', 'invisible');\n            } else {\n                scrollToTopBtn.classList.add('opacity-0', 'invisible');\n            }\n        });\n        \n        scrollToTopBtn.addEventListener('click', () => {\n            window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n        });\n\n        // Highlight current section in navigation\n        const sections = document.querySelectorAll('section[id]');\n        const navLinks = document.querySelectorAll('nav a[href^=\"#\"]');\n        \n        window.addEventListener('scroll', () => {\n            let currentSection = '';\n            \n            sections.forEach(section => {\n                const rect = section.getBoundingClientRect();\n                if (rect.top <= 100 && rect.bottom >= 100) {\n                    currentSection = section.id;\n                }\n            });\n            \n            navLinks.forEach(link => {\n                link.classList.remove('font-bold', 'text-purple-600');\n                if (link.getAttribute('href') === \\`#\\${currentSection}\\`) {\n                    link.classList.add('font-bold', 'text-purple-600');\n                }\n            });\n        });\n\n        console.log('📚 Улучшенное руководство по векторным БД загружено');\n    </script>\n</body>\n</html>`)\n})\n\n// Also handle .html extension for backward compatibility \napp.get('/vector_databases_enhanced_guide.html', (c) => {\n  return c.redirect('/vector_databases_enhanced_guide')\n})\n\nexport default app\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/user/webapp/dist/_worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/user/webapp/dist/_worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/user/webapp/.wrangler/tmp/bundle-n4Pb3G/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/user/webapp/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/user/webapp/.wrangler/tmp/bundle-n4Pb3G/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/user/webapp/.wrangler/tmp/bundle-n4Pb3G/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "/**\n * @param pathname A pathname string, such as `/foo` or `/foo/bar`\n * @param routingRule The routing rule, such as `/foo/*`\n * @returns True if pathname matches the routing rule\n *\n * /       ->  /\n * /*      ->  /*\n * /foo    ->  /foo\n * /foo*   ->  /foo, /foo-bar, /foo/*\n * /foo/*  ->  /foo, /foo/bar\n */\nexport function isRoutingRuleMatch(\n\tpathname: string,\n\troutingRule: string\n): boolean {\n\t// sanity checks\n\tif (!pathname) {\n\t\tthrow new Error(\"Pathname is undefined.\");\n\t}\n\tif (!routingRule) {\n\t\tthrow new Error(\"Routing rule is undefined.\");\n\t}\n\n\tconst ruleRegExp = transformRoutingRuleToRegExp(routingRule);\n\treturn pathname.match(ruleRegExp) !== null;\n}\n\nfunction transformRoutingRuleToRegExp(rule: string): RegExp {\n\tlet transformedRule;\n\n\tif (rule === \"/\" || rule === \"/*\") {\n\t\ttransformedRule = rule;\n\t} else if (rule.endsWith(\"/*\")) {\n\t\t// make `/*` an optional group so we can match both /foo/* and /foo\n\t\t// /foo/* => /foo(/*)?\n\t\ttransformedRule = `${rule.substring(0, rule.length - 2)}(/*)?`;\n\t} else if (rule.endsWith(\"/\")) {\n\t\t// make `/` an optional group so we can match both /foo/ and /foo\n\t\t// /foo/ => /foo(/)?\n\t\ttransformedRule = `${rule.substring(0, rule.length - 1)}(/)?`;\n\t} else if (rule.endsWith(\"*\")) {\n\t\ttransformedRule = rule;\n\t} else {\n\t\ttransformedRule = `${rule}(/)?`;\n\t}\n\n\t// /foo* => /foo.* => ^/foo.*$\n\t// /*.* => /*\\.* => /.*\\..* => ^/.*\\..*$\n\ttransformedRule = `^${transformedRule\n\t\t.replaceAll(/\\./g, \"\\\\.\")\n\t\t.replaceAll(/\\*/g, \".*\")}$`;\n\n\t// ^/foo.*$ => /^\\/foo.*$/\n\treturn new RegExp(transformedRule);\n}\n", "{\"version\":1,\"include\":[\"/*\"],\"exclude\":[\"/DEPLOYMENT.md\",\"/LICENSE\",\"/README.md\",\"/_worker.js.map\",\"/extract_html.py\",\"/index.html\",\"/rag_advanced.py\",\"/rag_example_formatted.py\",\"/rag_index.html\",\"/rag_pure_python.html\",\"/rag_pyodide_demo.html\",\"/rag_web_demo.html\",\"/seminar_yandex.html\",\"/static/*\",\"/vector_databases_guide.html\"]}", "// @ts-ignore entry point will get replaced\nimport worker from \"__ENTRY_POINT__\";\nimport { isRoutingRuleMatch } from \"./pages-dev-util\";\n\n// @ts-ignore entry point will get replaced\nexport * from \"__ENTRY_POINT__\";\n\n// @ts-ignore routes are injected\nconst routes = __ROUTES__;\n\nexport default <ExportedHandler<{ ASSETS: Fetcher }>>{\n\tfetch(request, env, context) {\n\t\tconst { pathname } = new URL(request.url);\n\n\t\tfor (const exclude of routes.exclude) {\n\t\t\tif (isRoutingRuleMatch(pathname, exclude)) {\n\t\t\t\treturn env.ASSETS.fetch(request);\n\t\t\t}\n\t\t}\n\n\t\tfor (const include of routes.include) {\n\t\t\tif (isRoutingRuleMatch(pathname, include)) {\n\t\t\t\tconst workerAsHandler = worker as ExportedHandler;\n\t\t\t\tif (workerAsHandler.fetch === undefined) {\n\t\t\t\t\tthrow new TypeError(\"Entry point missing `fetch` handler\");\n\t\t\t\t}\n\t\t\t\treturn workerAsHandler.fetch(request, env, context);\n\t\t\t}\n\t\t}\n\n\t\treturn env.ASSETS.fetch(request);\n\t},\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/user/webapp/.wrangler/tmp/pages-6kNGYP/fenmcxd2btc.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/user/webapp/.wrangler/tmp/pages-6kNGYP/fenmcxd2btc.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/user/webapp/.wrangler/tmp/bundle-nGRZZx/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/user/webapp/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/user/webapp/.wrangler/tmp/bundle-nGRZZx/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/user/webapp/.wrangler/tmp/bundle-nGRZZx/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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A,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AACJ,IAAM,WAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,E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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "x", "env", "count", "_Process", "cwd", "hrtime", "assert", "Writable", "EventEmitter", "createNotImplementedError", "__name", "notImplemented", "notImplementedClass", "_timeOrigin", "_performanceNow", "nodeTiming", "PerformanceEntry", "PerformanceMark", "PerformanceMeasure", "PerformanceResourceTiming", "PerformanceObserverEntryList", "Performance", "PerformanceObserver", "performance", "noop_default", "_console", "_ignoreErrors", "_stderr", "Writable", "_stdout", "log", "info", "trace", "debug", "table", "error", "warn", "createTask", "clear", "count", "countReset", "dir", "dirxml", "group", "groupEnd", "groupCollapsed", "profile", "profileEnd", "time", "timeEnd", "timeLog", "timeStamp", "Console", "_times", "_stdoutErrorHandler", "_stderrErrorHandler", "workerdConsole", "assert", "context", "console_default", "hrtime", "bigint", "ReadStream", "WriteStream", "x", "env", "NODE_VERSION", "Process", "EventEmitter", "cwd", "globalProcess", "getBuiltinModule", "exit", "platform", "nextTick", "unenvProcess", "abort", "addListener", "allowedNodeEnvironmentFlags", "hasUncaughtExceptionCaptureCallback", "setUncaughtExceptionCaptureCallback", "loadEnvFile", "sourceMapsEnabled", "arch", "argv", "argv0", "chdir", "config", "connected", "constrainedMemory", "availableMemory", "cpuUsage", "debugPort", "dlopen", "disconnect", "emit", "emitWarning", "eventNames", "execArgv", "execPath", "finalization", "features", "getActiveResourcesInfo", "getMaxListeners", "kill", "listeners", "listenerCount", "memoryUsage", "on", "off", "once", "pid", "ppid", "prependListener", "prependOnceListener", "rawListeners", "release", "removeAllListeners", "removeListener", "report", "resourceUsage", "setMaxListeners", "setSourceMapsEnabled", "stderr", "stdin", "stdout", "title", "throwDeprecation", "traceDeprecation", "umask", "uptime", "version", "versions", "domain", "initgroups", "moduleLoadList", "reallyExit", "openStdin", "binding", "send", "exitCode", "channel", "getegid", "geteuid", "getgid", "getgroups", "getuid", "setegid", "seteuid", "setgid", "setgroups", "setuid", "permission", "mainModule", "_events", "_eventsCount", "_exiting", "_maxListeners", "_debugEnd", "_debugProcess", "_fatalException", "_getActiveHandles", "_getActiveRequests", "_kill", "_preload_modules", "_rawDebug", "_startProfilerIdleNotifier", "_stopProfilerIdleNotifier", "_tickCallback", "_disconnect", "_handleQueue", "_pendingMessage", "_channel", "_send", "_linkedBinding", "_process", "process_default", "compose", "middleware", "onError", "onNotFound", "next", "index", "dispatch", "i", "res", "isError", "handler", "err", "GET_MATCH_RESULT", "parseBody", "request", "options", "all", "dot", "contentType", "HonoRequest", "parseFormData", "formData", "convertFormDataToBodyData", "form", "value", "key", "handleParsingAllValues", "handleParsingNestedValues", "nestedForm", "keys", "key2", "splitPath", "path", "paths", "splitRoutingPath", "routePath", "groups", "extractGroupsFromPath", "replaceGroupMarks", "match", "mark", "j", "patternCache", "getPattern", "label", "cacheKey", "tryDecode", "str", "decoder", "tryDecodeURI", "getPath", "url", "start", "charCode", "queryIndex", "getPathNoStrict", "result", "mergePath", "base", "sub", "rest", "checkOptionalParameter", "segments", "results", "basePath", "segment", "optionalSegment", "v", "a", "_decodeURI", "decodeURIComponent_", "_getQueryParam", "multiple", "encoded", "keyIndex2", "trailingKeyCode", "valueIndex", "endIndex", "keyIndex", "nextKeyIndex", "name", "getQueryParam", "getQueryParams", "tryDecodeURIComponent", "_validatedData", "_matchResult", "_HonoRequest_instances", "getDecodedParam_fn", "getAllDecodedParams_fn", "getParamValue_fn", "_cachedBody", "_a", "matchResult", "__privateAdd", "__publicField", "bodyCache", "raw", "cachedBody", "anyCachedKey", "body", "__privateSet", "__privateMethod", "headerData", "__privateGet", "text", "target", "data", "route", "paramKey", "param", "decoded", "HtmlEscapedCallbackPhase", "resolveCallback", "phase", "preserveCallbacks", "buffer", "callbacks", "c", "str2", "TEXT_PLAIN", "setDefaultContentType", "headers", "_rawRequest", "_req", "_var", "_status", "_executionCtx", "_res", "_layout", "_renderer", "_notFoundHandler", "_preparedHeaders", "_path", "_Context_instances", "newResponse_fn", "Context", "req", "args", "content", "layout", "renderer", "status", "arg", "object", "html", "html2", "location", "locationString", "k", "cookies", "cookie", "responseHeaders", "argHeaders", "v2", "METHOD_NAME_ALL", "METHOD_NAME_ALL_LOWERCASE", "METHODS", "MESSAGE_MATCHER_IS_ALREADY_BUILT", "UnsupportedPathError", "COMPOSED_HANDLER", "notFoundHandler", "errorHandler", "_Hono_instances", "clone_fn", "addRoute_fn", "handleError_fn", "dispatch_fn", "Hono", "input", "requestInit", "Env", "executionCtx", "event", "method", "args1", "handlers", "p", "m", "arg1", "strict", "optionsWithoutStrict", "app", "subApp", "applicationHandler", "replaceRequest", "optionHandler", "getOptions", "options2", "executionContext", "mergedPath", "pathPrefixLength", "clone", "resolved", "composed", "LABEL_REG_EXP_STR", "ONLY_WILDCARD_REG_EXP_STR", "TAIL_WILDCARD_REG_EXP_STR", "PATH_ERROR", "regExpMetaChars", "compareKey", "b", "_index", "_varIndex", "_children", "Node", "tokens", "paramMap", "pathErrorCheckOnly", "token", "restTokens", "pattern", "node", "regexpStr", "strList", "_context", "_root", "Trie", "paramAssoc", "replaced", "regexp", "captureIndex", "indexReplacementMap", "paramReplacementMap", "_", "handlerIndex", "paramIndex", "emptyParam", "nullMatcher", "wildcardRegExpCache", "buildWildcardRegExp", "metaChar", "clearWildcardRegExpCache", "buildMatcherFromPreprocessedRoutes", "routes", "trie", "handlerData", "routesWithStaticPathFlag", "isStaticA", "pathA", "isStaticB", "pathB", "staticMap", "len", "h", "e", "paramCount", "paramIndexMap", "len2", "map", "len3", "handlerMap", "findMiddleware", "_middleware", "_routes", "_RegExpRouter_instances", "buildAllMatchers_fn", "buildMatcher_fn", "RegExpRouter", "re", "path2", "matchers", "method2", "matcher", "staticMatch", "hasOwnRoute", "r", "ownRoute", "_routers", "SmartRouter", "init", "routers", "router", "i2", "emptyParams", "_methods", "_patterns", "_order", "_params", "_Node_instances", "getHandlerSets_fn", "children", "__privateWrapper", "curNode", "parts", "possibleKeys", "nextP", "handlerSets", "curNodes", "curNodesQueue", "part", "isLast", "tempNodes", "nextNode", "params", "astNode", "child", "restPathString", "componentCount", "nodeParams", "handlerSet", "processedSet", "processed", "_node", "TrieRouter", "HonoBase", "cors", "opts", "findAllowOrigin", "optsOrigin", "origin", "findAllowMethods", "optsAllowMethods", "set", "allowOrigin", "existingVary", "allowMethods", "requestHeaders", "COMPRESSIBLE_CONTENT_TYPE_REGEX", "getMimeType", "filename", "mimes", "baseMimes", "mimeType", "_baseMimes", "defaultJoin", "ENCODINGS", "ENCODINGS_ORDERED_KEYS", "DEFAULT_DOCUMENT", "serveStatic", "root", "optionPath", "join", "_b", "_c", "_d", "getContent", "acceptEncodingSet", "encoding", "compressedContent", "getContentFromKVAsset", "ASSET_MANIFEST", "ASSET_NAMESPACE", "baseServeStatic", "module", "env", "context", "drainBody", "env", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "env", "error", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "env", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "env", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
